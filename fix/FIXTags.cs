using System;

namespace Hydrogen.FIX
{
    public class FIXTags
    {
        public static readonly FieldSpec Account = new FieldSpec(FieldType.HashedSlice16, "Account");
        public static readonly FieldSpec AdvId = new FieldSpec(FieldType.HashedSlice16, "AdvId");
        public static readonly FieldSpec AdvRefID = new FieldSpec(FieldType.HashedSlice16, "AdvRefID");
        public static readonly FieldSpec AdvSide = new FieldSpec(FieldType.Char, "AdvSide");
        public static readonly FieldSpec AdvTransType = new FieldSpec(FieldType.HashedSlice16, "AdvTransType");
        public static readonly FieldSpec AvgPx = new FieldSpec(FieldType.Float, "AvgPx");
        public static readonly FieldSpec BeginSeqNo = new FieldSpec(FieldType.Int, "BeginSeqNo");
        public static readonly FieldSpec BeginString = new FieldSpec(FieldType.HashedSlice16, "BeginString");
        public static readonly FieldSpec BodyLength = new FieldSpec(FieldType.Int, "BodyLength");
        public static readonly FieldSpec CheckSum = new FieldSpec(FieldType.HashedSlice16, "CheckSum");
        public static readonly FieldSpec ClOrdID = new FieldSpec(FieldType.HashedSlice16, "ClOrdID");
        public static readonly FieldSpec Commission = new FieldSpec(FieldType.Float, "Commission");
        public static readonly FieldSpec CommType = new FieldSpec(FieldType.Char, "CommType");
        public static readonly FieldSpec CumQty = new FieldSpec(FieldType.Float, "CumQty");
        public static readonly FieldSpec Currency = new FieldSpec(FieldType.HashedSlice16, "Currency");
        public static readonly FieldSpec EndSeqNo = new FieldSpec(FieldType.Int, "EndSeqNo");
        public static readonly FieldSpec ExecID = new FieldSpec(FieldType.HashedSlice16, "ExecID");
        public static readonly FieldSpec ExecInst = new FieldSpec(FieldType.HashedSlice16, "ExecInst");
        public static readonly FieldSpec ExecRefID = new FieldSpec(FieldType.HashedSlice16, "ExecRefID");
        public static readonly FieldSpec HandlInst = new FieldSpec(FieldType.Char, "HandlInst");
        public static readonly FieldSpec SecurityIDSource = new FieldSpec(FieldType.HashedSlice16, "SecurityIDSource");
        public static readonly FieldSpec IOIID = new FieldSpec(FieldType.HashedSlice16, "IOIID");
        public static readonly FieldSpec IOIQltyInd = new FieldSpec(FieldType.Char, "IOIQltyInd");
        public static readonly FieldSpec IOIRefID = new FieldSpec(FieldType.HashedSlice16, "IOIRefID");
        public static readonly FieldSpec IOIQty = new FieldSpec(FieldType.HashedSlice16, "IOIQty");
        public static readonly FieldSpec IOITransType = new FieldSpec(FieldType.Char, "IOITransType");
        public static readonly FieldSpec LastCapacity = new FieldSpec(FieldType.Char, "LastCapacity");
        public static readonly FieldSpec LastMkt = new FieldSpec(FieldType.HashedSlice16, "LastMkt");
        public static readonly FieldSpec LastPx = new FieldSpec(FieldType.Float, "LastPx");
        public static readonly FieldSpec LastQty = new FieldSpec(FieldType.Float, "LastQty");
        public static readonly FieldSpec NoLinesOfText = new FieldSpec(FieldType.Int, "NoLinesOfText");
        public static readonly FieldSpec MsgSeqNum = new FieldSpec(FieldType.Int, "MsgSeqNum");
        public static readonly FieldSpec MsgType = new FieldSpec(FieldType.HashedSlice16, "MsgType");
        public static readonly FieldSpec NewSeqNo = new FieldSpec(FieldType.Int, "NewSeqNo");
        public static readonly FieldSpec OrderID = new FieldSpec(FieldType.HashedSlice16, "OrderID");
        public static readonly FieldSpec OrderQty = new FieldSpec(FieldType.Float, "OrderQty");
        public static readonly FieldSpec OrdStatus = new FieldSpec(FieldType.Char, "OrdStatus");
        public static readonly FieldSpec OrdType = new FieldSpec(FieldType.Char, "OrdType");
        public static readonly FieldSpec OrigClOrdID = new FieldSpec(FieldType.HashedSlice16, "OrigClOrdID");
        public static readonly FieldSpec OrigTime = new FieldSpec(FieldType.HashedSlice16, "OrigTime");
        public static readonly FieldSpec PossDupFlag = new FieldSpec(FieldType.Char, "PossDupFlag");
        public static readonly FieldSpec Price = new FieldSpec(FieldType.Float, "Price");
        public static readonly FieldSpec RefSeqNum = new FieldSpec(FieldType.Int, "RefSeqNum");
        public static readonly FieldSpec SecurityID = new FieldSpec(FieldType.HashedSlice16, "SecurityID");
        public static readonly FieldSpec SenderCompID = new FieldSpec(FieldType.HashedSlice16, "SenderCompID");
        public static readonly FieldSpec SenderSubID = new FieldSpec(FieldType.HashedSlice16, "SenderSubID");
        public static readonly FieldSpec SendingTime = new FieldSpec(FieldType.HashedSlice16, "SendingTime");
        public static readonly FieldSpec Quantity = new FieldSpec(FieldType.Float, "Quantity");
        public static readonly FieldSpec Side = new FieldSpec(FieldType.Char, "Side");
        public static readonly FieldSpec Symbol = new FieldSpec(FieldType.HashedSlice16, "Symbol");
        public static readonly FieldSpec TargetCompID = new FieldSpec(FieldType.HashedSlice16, "TargetCompID");
        public static readonly FieldSpec TargetSubID = new FieldSpec(FieldType.HashedSlice16, "TargetSubID");
        public static readonly FieldSpec Text = new FieldSpec(FieldType.HashedSlice16, "Text");
        public static readonly FieldSpec TimeInForce = new FieldSpec(FieldType.Char, "TimeInForce");
        public static readonly FieldSpec TransactTime = new FieldSpec(FieldType.HashedSlice16, "TransactTime");
        public static readonly FieldSpec Urgency = new FieldSpec(FieldType.Char, "Urgency");
        public static readonly FieldSpec ValidUntilTime = new FieldSpec(FieldType.HashedSlice16, "ValidUntilTime");
        public static readonly FieldSpec SettlType = new FieldSpec(FieldType.HashedSlice16, "SettlType");
        public static readonly FieldSpec SettlDate = new FieldSpec(FieldType.HashedSlice16, "SettlDate");
        public static readonly FieldSpec SymbolSfx = new FieldSpec(FieldType.HashedSlice16, "SymbolSfx");
        public static readonly FieldSpec ListID = new FieldSpec(FieldType.HashedSlice16, "ListID");
        public static readonly FieldSpec ListSeqNo = new FieldSpec(FieldType.Int, "ListSeqNo");
        public static readonly FieldSpec TotNoOrders = new FieldSpec(FieldType.Int, "TotNoOrders");
        public static readonly FieldSpec ListExecInst = new FieldSpec(FieldType.HashedSlice16, "ListExecInst");
        public static readonly FieldSpec AllocID = new FieldSpec(FieldType.HashedSlice16, "AllocID");
        public static readonly FieldSpec AllocTransType = new FieldSpec(FieldType.Char, "AllocTransType");
        public static readonly FieldSpec RefAllocID = new FieldSpec(FieldType.HashedSlice16, "RefAllocID");
        public static readonly FieldSpec NoOrders = new FieldSpec(FieldType.Int, "NoOrders");
        public static readonly FieldSpec AvgPxPrecision = new FieldSpec(FieldType.Int, "AvgPxPrecision");
        public static readonly FieldSpec TradeDate = new FieldSpec(FieldType.HashedSlice16, "TradeDate");
        public static readonly FieldSpec PositionEffect = new FieldSpec(FieldType.Char, "PositionEffect");
        public static readonly FieldSpec NoAllocs = new FieldSpec(FieldType.Int, "NoAllocs");
        public static readonly FieldSpec AllocAccount = new FieldSpec(FieldType.HashedSlice16, "AllocAccount");
        public static readonly FieldSpec AllocQty = new FieldSpec(FieldType.Float, "AllocQty");
        public static readonly FieldSpec ProcessCode = new FieldSpec(FieldType.Char, "ProcessCode");
        public static readonly FieldSpec NoRpts = new FieldSpec(FieldType.Int, "NoRpts");
        public static readonly FieldSpec RptSeq = new FieldSpec(FieldType.Int, "RptSeq");
        public static readonly FieldSpec CxlQty = new FieldSpec(FieldType.Float, "CxlQty");
        public static readonly FieldSpec NoDlvyInst = new FieldSpec(FieldType.Int, "NoDlvyInst");
        public static readonly FieldSpec AllocStatus = new FieldSpec(FieldType.Int, "AllocStatus");
        public static readonly FieldSpec AllocRejCode = new FieldSpec(FieldType.Int, "AllocRejCode");
        public static readonly FieldSpec Signature = new FieldSpec(FieldType.HashedSlice16, "Signature");
        public static readonly FieldSpec SecureDataLen = new FieldSpec(FieldType.Int, "SecureDataLen");
        public static readonly FieldSpec SecureData = new FieldSpec(FieldType.HashedSlice16, "SecureData");
        public static readonly FieldSpec SignatureLength = new FieldSpec(FieldType.Int, "SignatureLength");
        public static readonly FieldSpec EmailType = new FieldSpec(FieldType.Char, "EmailType");
        public static readonly FieldSpec RawDataLength = new FieldSpec(FieldType.Int, "RawDataLength");
        public static readonly FieldSpec RawData = new FieldSpec(FieldType.HashedSlice16, "RawData");
        public static readonly FieldSpec PossResend = new FieldSpec(FieldType.Char, "PossResend");
        public static readonly FieldSpec EncryptMethod = new FieldSpec(FieldType.Int, "EncryptMethod");
        public static readonly FieldSpec StopPx = new FieldSpec(FieldType.Float, "StopPx");
        public static readonly FieldSpec ExDestination = new FieldSpec(FieldType.HashedSlice16, "ExDestination");
        public static readonly FieldSpec CxlRejReason = new FieldSpec(FieldType.Int, "CxlRejReason");
        public static readonly FieldSpec OrdRejReason = new FieldSpec(FieldType.Int, "OrdRejReason");
        public static readonly FieldSpec IOIQualifier = new FieldSpec(FieldType.Char, "IOIQualifier");
        public static readonly FieldSpec Issuer = new FieldSpec(FieldType.HashedSlice16, "Issuer");
        public static readonly FieldSpec SecurityDesc = new FieldSpec(FieldType.HashedSlice16, "SecurityDesc");
        public static readonly FieldSpec HeartBtInt = new FieldSpec(FieldType.Int, "HeartBtInt");
        public static readonly FieldSpec MinQty = new FieldSpec(FieldType.Float, "MinQty");
        public static readonly FieldSpec MaxFloor = new FieldSpec(FieldType.Float, "MaxFloor");
        public static readonly FieldSpec TestReqID = new FieldSpec(FieldType.HashedSlice16, "TestReqID");
        public static readonly FieldSpec ReportToExch = new FieldSpec(FieldType.Char, "ReportToExch");
        public static readonly FieldSpec LocateReqd = new FieldSpec(FieldType.Char, "LocateReqd");
        public static readonly FieldSpec OnBehalfOfCompID = new FieldSpec(FieldType.HashedSlice16, "OnBehalfOfCompID");
        public static readonly FieldSpec OnBehalfOfSubID = new FieldSpec(FieldType.HashedSlice16, "OnBehalfOfSubID");
        public static readonly FieldSpec QuoteID = new FieldSpec(FieldType.HashedSlice16, "QuoteID");
        public static readonly FieldSpec NetMoney = new FieldSpec(FieldType.Float, "NetMoney");
        public static readonly FieldSpec SettlCurrAmt = new FieldSpec(FieldType.Float, "SettlCurrAmt");
        public static readonly FieldSpec SettlCurrency = new FieldSpec(FieldType.HashedSlice16, "SettlCurrency");
        public static readonly FieldSpec ForexReq = new FieldSpec(FieldType.Char, "ForexReq");
        public static readonly FieldSpec OrigSendingTime = new FieldSpec(FieldType.HashedSlice16, "OrigSendingTime");
        public static readonly FieldSpec GapFillFlag = new FieldSpec(FieldType.Char, "GapFillFlag");
        public static readonly FieldSpec NoExecs = new FieldSpec(FieldType.Int, "NoExecs");
        public static readonly FieldSpec ExpireTime = new FieldSpec(FieldType.HashedSlice16, "ExpireTime");
        public static readonly FieldSpec DKReason = new FieldSpec(FieldType.Char, "DKReason");
        public static readonly FieldSpec DeliverToCompID = new FieldSpec(FieldType.HashedSlice16, "DeliverToCompID");
        public static readonly FieldSpec DeliverToSubID = new FieldSpec(FieldType.HashedSlice16, "DeliverToSubID");
        public static readonly FieldSpec IOINaturalFlag = new FieldSpec(FieldType.Char, "IOINaturalFlag");
        public static readonly FieldSpec QuoteReqID = new FieldSpec(FieldType.HashedSlice16, "QuoteReqID");
        public static readonly FieldSpec BidPx = new FieldSpec(FieldType.Float, "BidPx");
        public static readonly FieldSpec OfferPx = new FieldSpec(FieldType.Float, "OfferPx");
        public static readonly FieldSpec BidSize = new FieldSpec(FieldType.Float, "BidSize");
        public static readonly FieldSpec OfferSize = new FieldSpec(FieldType.Float, "OfferSize");
        public static readonly FieldSpec NoMiscFees = new FieldSpec(FieldType.Int, "NoMiscFees");
        public static readonly FieldSpec MiscFeeAmt = new FieldSpec(FieldType.Float, "MiscFeeAmt");
        public static readonly FieldSpec MiscFeeCurr = new FieldSpec(FieldType.HashedSlice16, "MiscFeeCurr");
        public static readonly FieldSpec MiscFeeType = new FieldSpec(FieldType.HashedSlice16, "MiscFeeType");
        public static readonly FieldSpec PrevClosePx = new FieldSpec(FieldType.Float, "PrevClosePx");
        public static readonly FieldSpec ResetSeqNumFlag = new FieldSpec(FieldType.Char, "ResetSeqNumFlag");
        public static readonly FieldSpec SenderLocationID = new FieldSpec(FieldType.HashedSlice16, "SenderLocationID");
        public static readonly FieldSpec TargetLocationID = new FieldSpec(FieldType.HashedSlice16, "TargetLocationID");
        public static readonly FieldSpec OnBehalfOfLocationID = new FieldSpec(FieldType.HashedSlice16, "OnBehalfOfLocationID");
        public static readonly FieldSpec DeliverToLocationID = new FieldSpec(FieldType.HashedSlice16, "DeliverToLocationID");
        public static readonly FieldSpec NoRelatedSym = new FieldSpec(FieldType.Int, "NoRelatedSym");
        public static readonly FieldSpec Subject = new FieldSpec(FieldType.HashedSlice16, "Subject");
        public static readonly FieldSpec Headline = new FieldSpec(FieldType.HashedSlice16, "Headline");
        public static readonly FieldSpec URLLink = new FieldSpec(FieldType.HashedSlice16, "URLLink");
        public static readonly FieldSpec ExecType = new FieldSpec(FieldType.Char, "ExecType");
        public static readonly FieldSpec LeavesQty = new FieldSpec(FieldType.Float, "LeavesQty");
        public static readonly FieldSpec CashOrderQty = new FieldSpec(FieldType.Float, "CashOrderQty");
        public static readonly FieldSpec AllocAvgPx = new FieldSpec(FieldType.Float, "AllocAvgPx");
        public static readonly FieldSpec AllocNetMoney = new FieldSpec(FieldType.Float, "AllocNetMoney");
        public static readonly FieldSpec SettlCurrFxRate = new FieldSpec(FieldType.Float, "SettlCurrFxRate");
        public static readonly FieldSpec SettlCurrFxRateCalc = new FieldSpec(FieldType.Char, "SettlCurrFxRateCalc");
        public static readonly FieldSpec NumDaysInterest = new FieldSpec(FieldType.Int, "NumDaysInterest");
        public static readonly FieldSpec AccruedInterestRate = new FieldSpec(FieldType.Float, "AccruedInterestRate");
        public static readonly FieldSpec AccruedInterestAmt = new FieldSpec(FieldType.Float, "AccruedInterestAmt");
        public static readonly FieldSpec SettlInstMode = new FieldSpec(FieldType.Char, "SettlInstMode");
        public static readonly FieldSpec AllocText = new FieldSpec(FieldType.HashedSlice16, "AllocText");
        public static readonly FieldSpec SettlInstID = new FieldSpec(FieldType.HashedSlice16, "SettlInstID");
        public static readonly FieldSpec SettlInstTransType = new FieldSpec(FieldType.Char, "SettlInstTransType");
        public static readonly FieldSpec EmailThreadID = new FieldSpec(FieldType.HashedSlice16, "EmailThreadID");
        public static readonly FieldSpec SettlInstSource = new FieldSpec(FieldType.Char, "SettlInstSource");
        public static readonly FieldSpec SecurityType = new FieldSpec(FieldType.HashedSlice16, "SecurityType");
        public static readonly FieldSpec EffectiveTime = new FieldSpec(FieldType.HashedSlice16, "EffectiveTime");
        public static readonly FieldSpec StandInstDbType = new FieldSpec(FieldType.Int, "StandInstDbType");
        public static readonly FieldSpec StandInstDbName = new FieldSpec(FieldType.HashedSlice16, "StandInstDbName");
        public static readonly FieldSpec StandInstDbID = new FieldSpec(FieldType.HashedSlice16, "StandInstDbID");
        public static readonly FieldSpec SettlDeliveryType = new FieldSpec(FieldType.Int, "SettlDeliveryType");
        public static readonly FieldSpec BidSpotRate = new FieldSpec(FieldType.Float, "BidSpotRate");
        public static readonly FieldSpec BidForwardPoints = new FieldSpec(FieldType.Float, "BidForwardPoints");
        public static readonly FieldSpec OfferSpotRate = new FieldSpec(FieldType.Float, "OfferSpotRate");
        public static readonly FieldSpec OfferForwardPoints = new FieldSpec(FieldType.Float, "OfferForwardPoints");
        public static readonly FieldSpec OrderQty2 = new FieldSpec(FieldType.Float, "OrderQty2");
        public static readonly FieldSpec SettlDate2 = new FieldSpec(FieldType.HashedSlice16, "SettlDate2");
        public static readonly FieldSpec LastSpotRate = new FieldSpec(FieldType.Float, "LastSpotRate");
        public static readonly FieldSpec LastForwardPoints = new FieldSpec(FieldType.Float, "LastForwardPoints");
        public static readonly FieldSpec AllocLinkID = new FieldSpec(FieldType.HashedSlice16, "AllocLinkID");
        public static readonly FieldSpec AllocLinkType = new FieldSpec(FieldType.Int, "AllocLinkType");
        public static readonly FieldSpec SecondaryOrderID = new FieldSpec(FieldType.HashedSlice16, "SecondaryOrderID");
        public static readonly FieldSpec NoIOIQualifiers = new FieldSpec(FieldType.Int, "NoIOIQualifiers");
        public static readonly FieldSpec MaturityMonthYear = new FieldSpec(FieldType.HashedSlice16, "MaturityMonthYear");
        public static readonly FieldSpec PutOrCall = new FieldSpec(FieldType.Int, "PutOrCall");
        public static readonly FieldSpec StrikePrice = new FieldSpec(FieldType.Float, "StrikePrice");
        public static readonly FieldSpec CoveredOrUncovered = new FieldSpec(FieldType.Int, "CoveredOrUncovered");
        public static readonly FieldSpec OptAttribute = new FieldSpec(FieldType.Char, "OptAttribute");
        public static readonly FieldSpec SecurityExchange = new FieldSpec(FieldType.HashedSlice16, "SecurityExchange");
        public static readonly FieldSpec NotifyBrokerOfCredit = new FieldSpec(FieldType.Char, "NotifyBrokerOfCredit");
        public static readonly FieldSpec AllocHandlInst = new FieldSpec(FieldType.Int, "AllocHandlInst");
        public static readonly FieldSpec MaxShow = new FieldSpec(FieldType.Float, "MaxShow");
        public static readonly FieldSpec PegOffsetValue = new FieldSpec(FieldType.Float, "PegOffsetValue");
        public static readonly FieldSpec XmlDataLen = new FieldSpec(FieldType.Int, "XmlDataLen");
        public static readonly FieldSpec XmlData = new FieldSpec(FieldType.HashedSlice16, "XmlData");
        public static readonly FieldSpec SettlInstRefID = new FieldSpec(FieldType.HashedSlice16, "SettlInstRefID");
        public static readonly FieldSpec NoRoutingIDs = new FieldSpec(FieldType.Int, "NoRoutingIDs");
        public static readonly FieldSpec RoutingType = new FieldSpec(FieldType.Int, "RoutingType");
        public static readonly FieldSpec RoutingID = new FieldSpec(FieldType.HashedSlice16, "RoutingID");
        public static readonly FieldSpec Spread = new FieldSpec(FieldType.Float, "Spread");
        public static readonly FieldSpec BenchmarkCurveCurrency = new FieldSpec(FieldType.HashedSlice16, "BenchmarkCurveCurrency");
        public static readonly FieldSpec BenchmarkCurveName = new FieldSpec(FieldType.HashedSlice16, "BenchmarkCurveName");
        public static readonly FieldSpec BenchmarkCurvePoint = new FieldSpec(FieldType.HashedSlice16, "BenchmarkCurvePoint");
        public static readonly FieldSpec CouponRate = new FieldSpec(FieldType.Float, "CouponRate");
        public static readonly FieldSpec CouponPaymentDate = new FieldSpec(FieldType.HashedSlice16, "CouponPaymentDate");
        public static readonly FieldSpec IssueDate = new FieldSpec(FieldType.HashedSlice16, "IssueDate");
        public static readonly FieldSpec RepurchaseTerm = new FieldSpec(FieldType.Int, "RepurchaseTerm");
        public static readonly FieldSpec RepurchaseRate = new FieldSpec(FieldType.Float, "RepurchaseRate");
        public static readonly FieldSpec Factor = new FieldSpec(FieldType.Float, "Factor");
        public static readonly FieldSpec TradeOriginationDate = new FieldSpec(FieldType.HashedSlice16, "TradeOriginationDate");
        public static readonly FieldSpec ExDate = new FieldSpec(FieldType.HashedSlice16, "ExDate");
        public static readonly FieldSpec ContractMultiplier = new FieldSpec(FieldType.Float, "ContractMultiplier");
        public static readonly FieldSpec NoStipulations = new FieldSpec(FieldType.Int, "NoStipulations");
        public static readonly FieldSpec StipulationType = new FieldSpec(FieldType.HashedSlice16, "StipulationType");
        public static readonly FieldSpec StipulationValue = new FieldSpec(FieldType.HashedSlice16, "StipulationValue");
        public static readonly FieldSpec YieldType = new FieldSpec(FieldType.HashedSlice16, "YieldType");
        public static readonly FieldSpec Yield = new FieldSpec(FieldType.Float, "Yield");
        public static readonly FieldSpec TotalTakedown = new FieldSpec(FieldType.Float, "TotalTakedown");
        public static readonly FieldSpec Concession = new FieldSpec(FieldType.Float, "Concession");
        public static readonly FieldSpec RepoCollateralSecurityType = new FieldSpec(FieldType.HashedSlice16, "RepoCollateralSecurityType");
        public static readonly FieldSpec RedemptionDate = new FieldSpec(FieldType.HashedSlice16, "RedemptionDate");
        public static readonly FieldSpec UnderlyingCouponPaymentDate = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCouponPaymentDate");
        public static readonly FieldSpec UnderlyingIssueDate = new FieldSpec(FieldType.HashedSlice16, "UnderlyingIssueDate");
        public static readonly FieldSpec UnderlyingRepoCollateralSecurityType = new FieldSpec(FieldType.HashedSlice16, "UnderlyingRepoCollateralSecurityType");
        public static readonly FieldSpec UnderlyingRepurchaseTerm = new FieldSpec(FieldType.Int, "UnderlyingRepurchaseTerm");
        public static readonly FieldSpec UnderlyingRepurchaseRate = new FieldSpec(FieldType.Float, "UnderlyingRepurchaseRate");
        public static readonly FieldSpec UnderlyingFactor = new FieldSpec(FieldType.Float, "UnderlyingFactor");
        public static readonly FieldSpec UnderlyingRedemptionDate = new FieldSpec(FieldType.HashedSlice16, "UnderlyingRedemptionDate");
        public static readonly FieldSpec LegCouponPaymentDate = new FieldSpec(FieldType.HashedSlice16, "LegCouponPaymentDate");
        public static readonly FieldSpec LegIssueDate = new FieldSpec(FieldType.HashedSlice16, "LegIssueDate");
        public static readonly FieldSpec LegRepoCollateralSecurityType = new FieldSpec(FieldType.HashedSlice16, "LegRepoCollateralSecurityType");
        public static readonly FieldSpec LegRepurchaseTerm = new FieldSpec(FieldType.Int, "LegRepurchaseTerm");
        public static readonly FieldSpec LegRepurchaseRate = new FieldSpec(FieldType.Float, "LegRepurchaseRate");
        public static readonly FieldSpec LegFactor = new FieldSpec(FieldType.Float, "LegFactor");
        public static readonly FieldSpec LegRedemptionDate = new FieldSpec(FieldType.HashedSlice16, "LegRedemptionDate");
        public static readonly FieldSpec CreditRating = new FieldSpec(FieldType.HashedSlice16, "CreditRating");
        public static readonly FieldSpec UnderlyingCreditRating = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCreditRating");
        public static readonly FieldSpec LegCreditRating = new FieldSpec(FieldType.HashedSlice16, "LegCreditRating");
        public static readonly FieldSpec TradedFlatSwitch = new FieldSpec(FieldType.Char, "TradedFlatSwitch");
        public static readonly FieldSpec BasisFeatureDate = new FieldSpec(FieldType.HashedSlice16, "BasisFeatureDate");
        public static readonly FieldSpec BasisFeaturePrice = new FieldSpec(FieldType.Float, "BasisFeaturePrice");
        public static readonly FieldSpec MDReqID = new FieldSpec(FieldType.HashedSlice16, "MDReqID");
        public static readonly FieldSpec SubscriptionRequestType = new FieldSpec(FieldType.Char, "SubscriptionRequestType");
        public static readonly FieldSpec MarketDepth = new FieldSpec(FieldType.Int, "MarketDepth");
        public static readonly FieldSpec MDUpdateType = new FieldSpec(FieldType.Int, "MDUpdateType");
        public static readonly FieldSpec AggregatedBook = new FieldSpec(FieldType.Char, "AggregatedBook");
        public static readonly FieldSpec NoMDEntryTypes = new FieldSpec(FieldType.Int, "NoMDEntryTypes");
        public static readonly FieldSpec NoMDEntries = new FieldSpec(FieldType.Int, "NoMDEntries");
        public static readonly FieldSpec MDEntryType = new FieldSpec(FieldType.Char, "MDEntryType");
        public static readonly FieldSpec MDEntryPx = new FieldSpec(FieldType.Float, "MDEntryPx");
        public static readonly FieldSpec MDEntrySize = new FieldSpec(FieldType.Float, "MDEntrySize");
        public static readonly FieldSpec MDEntryDate = new FieldSpec(FieldType.HashedSlice16, "MDEntryDate");
        public static readonly FieldSpec MDEntryTime = new FieldSpec(FieldType.HashedSlice16, "MDEntryTime");
        public static readonly FieldSpec TickDirection = new FieldSpec(FieldType.Char, "TickDirection");
        public static readonly FieldSpec MDMkt = new FieldSpec(FieldType.HashedSlice16, "MDMkt");
        public static readonly FieldSpec QuoteCondition = new FieldSpec(FieldType.HashedSlice16, "QuoteCondition");
        public static readonly FieldSpec TradeCondition = new FieldSpec(FieldType.HashedSlice16, "TradeCondition");
        public static readonly FieldSpec MDEntryID = new FieldSpec(FieldType.HashedSlice16, "MDEntryID");
        public static readonly FieldSpec MDUpdateAction = new FieldSpec(FieldType.Char, "MDUpdateAction");
        public static readonly FieldSpec MDEntryRefID = new FieldSpec(FieldType.HashedSlice16, "MDEntryRefID");
        public static readonly FieldSpec MDReqRejReason = new FieldSpec(FieldType.Char, "MDReqRejReason");
        public static readonly FieldSpec MDEntryOriginator = new FieldSpec(FieldType.HashedSlice16, "MDEntryOriginator");
        public static readonly FieldSpec LocationID = new FieldSpec(FieldType.HashedSlice16, "LocationID");
        public static readonly FieldSpec DeskID = new FieldSpec(FieldType.HashedSlice16, "DeskID");
        public static readonly FieldSpec DeleteReason = new FieldSpec(FieldType.Char, "DeleteReason");
        public static readonly FieldSpec OpenCloseSettlFlag = new FieldSpec(FieldType.HashedSlice16, "OpenCloseSettlFlag");
        public static readonly FieldSpec SellerDays = new FieldSpec(FieldType.Int, "SellerDays");
        public static readonly FieldSpec MDEntryBuyer = new FieldSpec(FieldType.HashedSlice16, "MDEntryBuyer");
        public static readonly FieldSpec MDEntrySeller = new FieldSpec(FieldType.HashedSlice16, "MDEntrySeller");
        public static readonly FieldSpec MDEntryPositionNo = new FieldSpec(FieldType.Int, "MDEntryPositionNo");
        public static readonly FieldSpec FinancialStatus = new FieldSpec(FieldType.HashedSlice16, "FinancialStatus");
        public static readonly FieldSpec CorporateAction = new FieldSpec(FieldType.HashedSlice16, "CorporateAction");
        public static readonly FieldSpec DefBidSize = new FieldSpec(FieldType.Float, "DefBidSize");
        public static readonly FieldSpec DefOfferSize = new FieldSpec(FieldType.Float, "DefOfferSize");
        public static readonly FieldSpec NoQuoteEntries = new FieldSpec(FieldType.Int, "NoQuoteEntries");
        public static readonly FieldSpec NoQuoteSets = new FieldSpec(FieldType.Int, "NoQuoteSets");
        public static readonly FieldSpec QuoteStatus = new FieldSpec(FieldType.Int, "QuoteStatus");
        public static readonly FieldSpec QuoteCancelType = new FieldSpec(FieldType.Int, "QuoteCancelType");
        public static readonly FieldSpec QuoteEntryID = new FieldSpec(FieldType.HashedSlice16, "QuoteEntryID");
        public static readonly FieldSpec QuoteRejectReason = new FieldSpec(FieldType.Int, "QuoteRejectReason");
        public static readonly FieldSpec QuoteResponseLevel = new FieldSpec(FieldType.Int, "QuoteResponseLevel");
        public static readonly FieldSpec QuoteSetID = new FieldSpec(FieldType.HashedSlice16, "QuoteSetID");
        public static readonly FieldSpec QuoteRequestType = new FieldSpec(FieldType.Int, "QuoteRequestType");
        public static readonly FieldSpec TotNoQuoteEntries = new FieldSpec(FieldType.Int, "TotNoQuoteEntries");
        public static readonly FieldSpec UnderlyingSecurityIDSource = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityIDSource");
        public static readonly FieldSpec UnderlyingIssuer = new FieldSpec(FieldType.HashedSlice16, "UnderlyingIssuer");
        public static readonly FieldSpec UnderlyingSecurityDesc = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityDesc");
        public static readonly FieldSpec UnderlyingSecurityExchange = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityExchange");
        public static readonly FieldSpec UnderlyingSecurityID = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityID");
        public static readonly FieldSpec UnderlyingSecurityType = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityType");
        public static readonly FieldSpec UnderlyingSymbol = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSymbol");
        public static readonly FieldSpec UnderlyingSymbolSfx = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSymbolSfx");
        public static readonly FieldSpec UnderlyingMaturityMonthYear = new FieldSpec(FieldType.HashedSlice16, "UnderlyingMaturityMonthYear");
        public static readonly FieldSpec UnderlyingPutOrCall = new FieldSpec(FieldType.Int, "UnderlyingPutOrCall");
        public static readonly FieldSpec UnderlyingStrikePrice = new FieldSpec(FieldType.Float, "UnderlyingStrikePrice");
        public static readonly FieldSpec UnderlyingOptAttribute = new FieldSpec(FieldType.Char, "UnderlyingOptAttribute");
        public static readonly FieldSpec UnderlyingCurrency = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCurrency");
        public static readonly FieldSpec SecurityReqID = new FieldSpec(FieldType.HashedSlice16, "SecurityReqID");
        public static readonly FieldSpec SecurityRequestType = new FieldSpec(FieldType.Int, "SecurityRequestType");
        public static readonly FieldSpec SecurityResponseID = new FieldSpec(FieldType.HashedSlice16, "SecurityResponseID");
        public static readonly FieldSpec SecurityResponseType = new FieldSpec(FieldType.Int, "SecurityResponseType");
        public static readonly FieldSpec SecurityStatusReqID = new FieldSpec(FieldType.HashedSlice16, "SecurityStatusReqID");
        public static readonly FieldSpec UnsolicitedIndicator = new FieldSpec(FieldType.Char, "UnsolicitedIndicator");
        public static readonly FieldSpec SecurityTradingStatus = new FieldSpec(FieldType.Int, "SecurityTradingStatus");
        public static readonly FieldSpec HaltReason = new FieldSpec(FieldType.Int, "HaltReason");
        public static readonly FieldSpec InViewOfCommon = new FieldSpec(FieldType.Char, "InViewOfCommon");
        public static readonly FieldSpec DueToRelated = new FieldSpec(FieldType.Char, "DueToRelated");
        public static readonly FieldSpec BuyVolume = new FieldSpec(FieldType.Float, "BuyVolume");
        public static readonly FieldSpec SellVolume = new FieldSpec(FieldType.Float, "SellVolume");
        public static readonly FieldSpec HighPx = new FieldSpec(FieldType.Float, "HighPx");
        public static readonly FieldSpec LowPx = new FieldSpec(FieldType.Float, "LowPx");
        public static readonly FieldSpec Adjustment = new FieldSpec(FieldType.Int, "Adjustment");
        public static readonly FieldSpec TradSesReqID = new FieldSpec(FieldType.HashedSlice16, "TradSesReqID");
        public static readonly FieldSpec TradingSessionID = new FieldSpec(FieldType.HashedSlice16, "TradingSessionID");
        public static readonly FieldSpec ContraTrader = new FieldSpec(FieldType.HashedSlice16, "ContraTrader");
        public static readonly FieldSpec TradSesMethod = new FieldSpec(FieldType.Int, "TradSesMethod");
        public static readonly FieldSpec TradSesMode = new FieldSpec(FieldType.Int, "TradSesMode");
        public static readonly FieldSpec TradSesStatus = new FieldSpec(FieldType.Int, "TradSesStatus");
        public static readonly FieldSpec TradSesStartTime = new FieldSpec(FieldType.HashedSlice16, "TradSesStartTime");
        public static readonly FieldSpec TradSesOpenTime = new FieldSpec(FieldType.HashedSlice16, "TradSesOpenTime");
        public static readonly FieldSpec TradSesPreCloseTime = new FieldSpec(FieldType.HashedSlice16, "TradSesPreCloseTime");
        public static readonly FieldSpec TradSesCloseTime = new FieldSpec(FieldType.HashedSlice16, "TradSesCloseTime");
        public static readonly FieldSpec TradSesEndTime = new FieldSpec(FieldType.HashedSlice16, "TradSesEndTime");
        public static readonly FieldSpec NumberOfOrders = new FieldSpec(FieldType.Int, "NumberOfOrders");
        public static readonly FieldSpec MessageEncoding = new FieldSpec(FieldType.HashedSlice16, "MessageEncoding");
        public static readonly FieldSpec EncodedIssuerLen = new FieldSpec(FieldType.Int, "EncodedIssuerLen");
        public static readonly FieldSpec EncodedIssuer = new FieldSpec(FieldType.HashedSlice16, "EncodedIssuer");
        public static readonly FieldSpec EncodedSecurityDescLen = new FieldSpec(FieldType.Int, "EncodedSecurityDescLen");
        public static readonly FieldSpec EncodedSecurityDesc = new FieldSpec(FieldType.HashedSlice16, "EncodedSecurityDesc");
        public static readonly FieldSpec EncodedListExecInstLen = new FieldSpec(FieldType.Int, "EncodedListExecInstLen");
        public static readonly FieldSpec EncodedListExecInst = new FieldSpec(FieldType.HashedSlice16, "EncodedListExecInst");
        public static readonly FieldSpec EncodedTextLen = new FieldSpec(FieldType.Int, "EncodedTextLen");
        public static readonly FieldSpec EncodedText = new FieldSpec(FieldType.HashedSlice16, "EncodedText");
        public static readonly FieldSpec EncodedSubjectLen = new FieldSpec(FieldType.Int, "EncodedSubjectLen");
        public static readonly FieldSpec EncodedSubject = new FieldSpec(FieldType.HashedSlice16, "EncodedSubject");
        public static readonly FieldSpec EncodedHeadlineLen = new FieldSpec(FieldType.Int, "EncodedHeadlineLen");
        public static readonly FieldSpec EncodedHeadline = new FieldSpec(FieldType.HashedSlice16, "EncodedHeadline");
        public static readonly FieldSpec EncodedAllocTextLen = new FieldSpec(FieldType.Int, "EncodedAllocTextLen");
        public static readonly FieldSpec EncodedAllocText = new FieldSpec(FieldType.HashedSlice16, "EncodedAllocText");
        public static readonly FieldSpec EncodedUnderlyingIssuerLen = new FieldSpec(FieldType.Int, "EncodedUnderlyingIssuerLen");
        public static readonly FieldSpec EncodedUnderlyingIssuer = new FieldSpec(FieldType.HashedSlice16, "EncodedUnderlyingIssuer");
        public static readonly FieldSpec EncodedUnderlyingSecurityDescLen = new FieldSpec(FieldType.Int, "EncodedUnderlyingSecurityDescLen");
        public static readonly FieldSpec EncodedUnderlyingSecurityDesc = new FieldSpec(FieldType.HashedSlice16, "EncodedUnderlyingSecurityDesc");
        public static readonly FieldSpec AllocPrice = new FieldSpec(FieldType.Float, "AllocPrice");
        public static readonly FieldSpec QuoteSetValidUntilTime = new FieldSpec(FieldType.HashedSlice16, "QuoteSetValidUntilTime");
        public static readonly FieldSpec QuoteEntryRejectReason = new FieldSpec(FieldType.Int, "QuoteEntryRejectReason");
        public static readonly FieldSpec LastMsgSeqNumProcessed = new FieldSpec(FieldType.Int, "LastMsgSeqNumProcessed");
        public static readonly FieldSpec RefTagID = new FieldSpec(FieldType.Int, "RefTagID");
        public static readonly FieldSpec RefMsgType = new FieldSpec(FieldType.HashedSlice16, "RefMsgType");
        public static readonly FieldSpec SessionRejectReason = new FieldSpec(FieldType.Int, "SessionRejectReason");
        public static readonly FieldSpec BidRequestTransType = new FieldSpec(FieldType.Char, "BidRequestTransType");
        public static readonly FieldSpec ContraBroker = new FieldSpec(FieldType.HashedSlice16, "ContraBroker");
        public static readonly FieldSpec ComplianceID = new FieldSpec(FieldType.HashedSlice16, "ComplianceID");
        public static readonly FieldSpec SolicitedFlag = new FieldSpec(FieldType.Char, "SolicitedFlag");
        public static readonly FieldSpec ExecRestatementReason = new FieldSpec(FieldType.Int, "ExecRestatementReason");
        public static readonly FieldSpec BusinessRejectRefID = new FieldSpec(FieldType.HashedSlice16, "BusinessRejectRefID");
        public static readonly FieldSpec BusinessRejectReason = new FieldSpec(FieldType.Int, "BusinessRejectReason");
        public static readonly FieldSpec GrossTradeAmt = new FieldSpec(FieldType.Float, "GrossTradeAmt");
        public static readonly FieldSpec NoContraBrokers = new FieldSpec(FieldType.Int, "NoContraBrokers");
        public static readonly FieldSpec MaxMessageSize = new FieldSpec(FieldType.Int, "MaxMessageSize");
        public static readonly FieldSpec NoMsgTypes = new FieldSpec(FieldType.Int, "NoMsgTypes");
        public static readonly FieldSpec MsgDirection = new FieldSpec(FieldType.Char, "MsgDirection");
        public static readonly FieldSpec NoTradingSessions = new FieldSpec(FieldType.Int, "NoTradingSessions");
        public static readonly FieldSpec TotalVolumeTraded = new FieldSpec(FieldType.Float, "TotalVolumeTraded");
        public static readonly FieldSpec DiscretionInst = new FieldSpec(FieldType.Char, "DiscretionInst");
        public static readonly FieldSpec DiscretionOffsetValue = new FieldSpec(FieldType.Float, "DiscretionOffsetValue");
        public static readonly FieldSpec BidID = new FieldSpec(FieldType.HashedSlice16, "BidID");
        public static readonly FieldSpec ClientBidID = new FieldSpec(FieldType.HashedSlice16, "ClientBidID");
        public static readonly FieldSpec ListName = new FieldSpec(FieldType.HashedSlice16, "ListName");
        public static readonly FieldSpec TotNoRelatedSym = new FieldSpec(FieldType.Int, "TotNoRelatedSym");
        public static readonly FieldSpec BidType = new FieldSpec(FieldType.Int, "BidType");
        public static readonly FieldSpec NumTickets = new FieldSpec(FieldType.Int, "NumTickets");
        public static readonly FieldSpec SideValue1 = new FieldSpec(FieldType.Float, "SideValue1");
        public static readonly FieldSpec SideValue2 = new FieldSpec(FieldType.Float, "SideValue2");
        public static readonly FieldSpec NoBidDescriptors = new FieldSpec(FieldType.Int, "NoBidDescriptors");
        public static readonly FieldSpec BidDescriptorType = new FieldSpec(FieldType.Int, "BidDescriptorType");
        public static readonly FieldSpec BidDescriptor = new FieldSpec(FieldType.HashedSlice16, "BidDescriptor");
        public static readonly FieldSpec SideValueInd = new FieldSpec(FieldType.Int, "SideValueInd");
        public static readonly FieldSpec LiquidityPctLow = new FieldSpec(FieldType.Float, "LiquidityPctLow");
        public static readonly FieldSpec LiquidityPctHigh = new FieldSpec(FieldType.Float, "LiquidityPctHigh");
        public static readonly FieldSpec LiquidityValue = new FieldSpec(FieldType.Float, "LiquidityValue");
        public static readonly FieldSpec EFPTrackingError = new FieldSpec(FieldType.Float, "EFPTrackingError");
        public static readonly FieldSpec FairValue = new FieldSpec(FieldType.Float, "FairValue");
        public static readonly FieldSpec OutsideIndexPct = new FieldSpec(FieldType.Float, "OutsideIndexPct");
        public static readonly FieldSpec ValueOfFutures = new FieldSpec(FieldType.Float, "ValueOfFutures");
        public static readonly FieldSpec LiquidityIndType = new FieldSpec(FieldType.Int, "LiquidityIndType");
        public static readonly FieldSpec WtAverageLiquidity = new FieldSpec(FieldType.Float, "WtAverageLiquidity");
        public static readonly FieldSpec ExchangeForPhysical = new FieldSpec(FieldType.Char, "ExchangeForPhysical");
        public static readonly FieldSpec OutMainCntryUIndex = new FieldSpec(FieldType.Float, "OutMainCntryUIndex");
        public static readonly FieldSpec CrossPercent = new FieldSpec(FieldType.Float, "CrossPercent");
        public static readonly FieldSpec ProgRptReqs = new FieldSpec(FieldType.Int, "ProgRptReqs");
        public static readonly FieldSpec ProgPeriodInterval = new FieldSpec(FieldType.Int, "ProgPeriodInterval");
        public static readonly FieldSpec IncTaxInd = new FieldSpec(FieldType.Int, "IncTaxInd");
        public static readonly FieldSpec NumBidders = new FieldSpec(FieldType.Int, "NumBidders");
        public static readonly FieldSpec BidTradeType = new FieldSpec(FieldType.Char, "BidTradeType");
        public static readonly FieldSpec BasisPxType = new FieldSpec(FieldType.Char, "BasisPxType");
        public static readonly FieldSpec NoBidComponents = new FieldSpec(FieldType.Int, "NoBidComponents");
        public static readonly FieldSpec Country = new FieldSpec(FieldType.HashedSlice16, "Country");
        public static readonly FieldSpec TotNoStrikes = new FieldSpec(FieldType.Int, "TotNoStrikes");
        public static readonly FieldSpec PriceType = new FieldSpec(FieldType.Int, "PriceType");
        public static readonly FieldSpec DayOrderQty = new FieldSpec(FieldType.Float, "DayOrderQty");
        public static readonly FieldSpec DayCumQty = new FieldSpec(FieldType.Float, "DayCumQty");
        public static readonly FieldSpec DayAvgPx = new FieldSpec(FieldType.Float, "DayAvgPx");
        public static readonly FieldSpec GTBookingInst = new FieldSpec(FieldType.Int, "GTBookingInst");
        public static readonly FieldSpec NoStrikes = new FieldSpec(FieldType.Int, "NoStrikes");
        public static readonly FieldSpec ListStatusType = new FieldSpec(FieldType.Int, "ListStatusType");
        public static readonly FieldSpec NetGrossInd = new FieldSpec(FieldType.Int, "NetGrossInd");
        public static readonly FieldSpec ListOrderStatus = new FieldSpec(FieldType.Int, "ListOrderStatus");
        public static readonly FieldSpec ExpireDate = new FieldSpec(FieldType.HashedSlice16, "ExpireDate");
        public static readonly FieldSpec ListExecInstType = new FieldSpec(FieldType.Char, "ListExecInstType");
        public static readonly FieldSpec CxlRejResponseTo = new FieldSpec(FieldType.Char, "CxlRejResponseTo");
        public static readonly FieldSpec UnderlyingCouponRate = new FieldSpec(FieldType.Float, "UnderlyingCouponRate");
        public static readonly FieldSpec UnderlyingContractMultiplier = new FieldSpec(FieldType.Float, "UnderlyingContractMultiplier");
        public static readonly FieldSpec ContraTradeQty = new FieldSpec(FieldType.Float, "ContraTradeQty");
        public static readonly FieldSpec ContraTradeTime = new FieldSpec(FieldType.HashedSlice16, "ContraTradeTime");
        public static readonly FieldSpec LiquidityNumSecurities = new FieldSpec(FieldType.Int, "LiquidityNumSecurities");
        public static readonly FieldSpec MultiLegReportingType = new FieldSpec(FieldType.Char, "MultiLegReportingType");
        public static readonly FieldSpec StrikeTime = new FieldSpec(FieldType.HashedSlice16, "StrikeTime");
        public static readonly FieldSpec ListStatusText = new FieldSpec(FieldType.HashedSlice16, "ListStatusText");
        public static readonly FieldSpec EncodedListStatusTextLen = new FieldSpec(FieldType.Int, "EncodedListStatusTextLen");
        public static readonly FieldSpec EncodedListStatusText = new FieldSpec(FieldType.HashedSlice16, "EncodedListStatusText");
        public static readonly FieldSpec PartyIDSource = new FieldSpec(FieldType.Char, "PartyIDSource");
        public static readonly FieldSpec PartyID = new FieldSpec(FieldType.HashedSlice16, "PartyID");
        public static readonly FieldSpec NetChgPrevDay = new FieldSpec(FieldType.Float, "NetChgPrevDay");
        public static readonly FieldSpec PartyRole = new FieldSpec(FieldType.Int, "PartyRole");
        public static readonly FieldSpec NoPartyIDs = new FieldSpec(FieldType.Int, "NoPartyIDs");
        public static readonly FieldSpec NoSecurityAltID = new FieldSpec(FieldType.Int, "NoSecurityAltID");
        public static readonly FieldSpec SecurityAltID = new FieldSpec(FieldType.HashedSlice16, "SecurityAltID");
        public static readonly FieldSpec SecurityAltIDSource = new FieldSpec(FieldType.HashedSlice16, "SecurityAltIDSource");
        public static readonly FieldSpec NoUnderlyingSecurityAltID = new FieldSpec(FieldType.Int, "NoUnderlyingSecurityAltID");
        public static readonly FieldSpec UnderlyingSecurityAltID = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityAltID");
        public static readonly FieldSpec UnderlyingSecurityAltIDSource = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecurityAltIDSource");
        public static readonly FieldSpec Product = new FieldSpec(FieldType.Int, "Product");
        public static readonly FieldSpec CFICode = new FieldSpec(FieldType.HashedSlice16, "CFICode");
        public static readonly FieldSpec UnderlyingProduct = new FieldSpec(FieldType.Int, "UnderlyingProduct");
        public static readonly FieldSpec UnderlyingCFICode = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCFICode");
        public static readonly FieldSpec TestMessageIndicator = new FieldSpec(FieldType.Char, "TestMessageIndicator");
        public static readonly FieldSpec BookingRefID = new FieldSpec(FieldType.HashedSlice16, "BookingRefID");
        public static readonly FieldSpec IndividualAllocID = new FieldSpec(FieldType.HashedSlice16, "IndividualAllocID");
        public static readonly FieldSpec RoundingDirection = new FieldSpec(FieldType.Char, "RoundingDirection");
        public static readonly FieldSpec RoundingModulus = new FieldSpec(FieldType.Float, "RoundingModulus");
        public static readonly FieldSpec CountryOfIssue = new FieldSpec(FieldType.HashedSlice16, "CountryOfIssue");
        public static readonly FieldSpec StateOrProvinceOfIssue = new FieldSpec(FieldType.HashedSlice16, "StateOrProvinceOfIssue");
        public static readonly FieldSpec LocaleOfIssue = new FieldSpec(FieldType.HashedSlice16, "LocaleOfIssue");
        public static readonly FieldSpec NoRegistDtls = new FieldSpec(FieldType.Int, "NoRegistDtls");
        public static readonly FieldSpec MailingDtls = new FieldSpec(FieldType.HashedSlice16, "MailingDtls");
        public static readonly FieldSpec InvestorCountryOfResidence = new FieldSpec(FieldType.HashedSlice16, "InvestorCountryOfResidence");
        public static readonly FieldSpec PaymentRef = new FieldSpec(FieldType.HashedSlice16, "PaymentRef");
        public static readonly FieldSpec DistribPaymentMethod = new FieldSpec(FieldType.Int, "DistribPaymentMethod");
        public static readonly FieldSpec CashDistribCurr = new FieldSpec(FieldType.HashedSlice16, "CashDistribCurr");
        public static readonly FieldSpec CommCurrency = new FieldSpec(FieldType.HashedSlice16, "CommCurrency");
        public static readonly FieldSpec CancellationRights = new FieldSpec(FieldType.Char, "CancellationRights");
        public static readonly FieldSpec MoneyLaunderingStatus = new FieldSpec(FieldType.Char, "MoneyLaunderingStatus");
        public static readonly FieldSpec MailingInst = new FieldSpec(FieldType.HashedSlice16, "MailingInst");
        public static readonly FieldSpec TransBkdTime = new FieldSpec(FieldType.HashedSlice16, "TransBkdTime");
        public static readonly FieldSpec ExecPriceType = new FieldSpec(FieldType.Char, "ExecPriceType");
        public static readonly FieldSpec ExecPriceAdjustment = new FieldSpec(FieldType.Float, "ExecPriceAdjustment");
        public static readonly FieldSpec DateOfBirth = new FieldSpec(FieldType.HashedSlice16, "DateOfBirth");
        public static readonly FieldSpec TradeReportTransType = new FieldSpec(FieldType.Int, "TradeReportTransType");
        public static readonly FieldSpec CardHolderName = new FieldSpec(FieldType.HashedSlice16, "CardHolderName");
        public static readonly FieldSpec CardNumber = new FieldSpec(FieldType.HashedSlice16, "CardNumber");
        public static readonly FieldSpec CardExpDate = new FieldSpec(FieldType.HashedSlice16, "CardExpDate");
        public static readonly FieldSpec CardIssNum = new FieldSpec(FieldType.HashedSlice16, "CardIssNum");
        public static readonly FieldSpec PaymentMethod = new FieldSpec(FieldType.Int, "PaymentMethod");
        public static readonly FieldSpec RegistAcctType = new FieldSpec(FieldType.HashedSlice16, "RegistAcctType");
        public static readonly FieldSpec Designation = new FieldSpec(FieldType.HashedSlice16, "Designation");
        public static readonly FieldSpec TaxAdvantageType = new FieldSpec(FieldType.Int, "TaxAdvantageType");
        public static readonly FieldSpec RegistRejReasonText = new FieldSpec(FieldType.HashedSlice16, "RegistRejReasonText");
        public static readonly FieldSpec FundRenewWaiv = new FieldSpec(FieldType.Char, "FundRenewWaiv");
        public static readonly FieldSpec CashDistribAgentName = new FieldSpec(FieldType.HashedSlice16, "CashDistribAgentName");
        public static readonly FieldSpec CashDistribAgentCode = new FieldSpec(FieldType.HashedSlice16, "CashDistribAgentCode");
        public static readonly FieldSpec CashDistribAgentAcctNumber = new FieldSpec(FieldType.HashedSlice16, "CashDistribAgentAcctNumber");
        public static readonly FieldSpec CashDistribPayRef = new FieldSpec(FieldType.HashedSlice16, "CashDistribPayRef");
        public static readonly FieldSpec CashDistribAgentAcctName = new FieldSpec(FieldType.HashedSlice16, "CashDistribAgentAcctName");
        public static readonly FieldSpec CardStartDate = new FieldSpec(FieldType.HashedSlice16, "CardStartDate");
        public static readonly FieldSpec PaymentDate = new FieldSpec(FieldType.HashedSlice16, "PaymentDate");
        public static readonly FieldSpec PaymentRemitterID = new FieldSpec(FieldType.HashedSlice16, "PaymentRemitterID");
        public static readonly FieldSpec RegistStatus = new FieldSpec(FieldType.Char, "RegistStatus");
        public static readonly FieldSpec RegistRejReasonCode = new FieldSpec(FieldType.Int, "RegistRejReasonCode");
        public static readonly FieldSpec RegistRefID = new FieldSpec(FieldType.HashedSlice16, "RegistRefID");
        public static readonly FieldSpec RegistDtls = new FieldSpec(FieldType.HashedSlice16, "RegistDtls");
        public static readonly FieldSpec NoDistribInsts = new FieldSpec(FieldType.Int, "NoDistribInsts");
        public static readonly FieldSpec RegistEmail = new FieldSpec(FieldType.HashedSlice16, "RegistEmail");
        public static readonly FieldSpec DistribPercentage = new FieldSpec(FieldType.Float, "DistribPercentage");
        public static readonly FieldSpec RegistID = new FieldSpec(FieldType.HashedSlice16, "RegistID");
        public static readonly FieldSpec RegistTransType = new FieldSpec(FieldType.Char, "RegistTransType");
        public static readonly FieldSpec ExecValuationPoint = new FieldSpec(FieldType.HashedSlice16, "ExecValuationPoint");
        public static readonly FieldSpec OrderPercent = new FieldSpec(FieldType.Float, "OrderPercent");
        public static readonly FieldSpec OwnershipType = new FieldSpec(FieldType.Char, "OwnershipType");
        public static readonly FieldSpec NoContAmts = new FieldSpec(FieldType.Int, "NoContAmts");
        public static readonly FieldSpec ContAmtType = new FieldSpec(FieldType.Int, "ContAmtType");
        public static readonly FieldSpec ContAmtValue = new FieldSpec(FieldType.Float, "ContAmtValue");
        public static readonly FieldSpec ContAmtCurr = new FieldSpec(FieldType.HashedSlice16, "ContAmtCurr");
        public static readonly FieldSpec OwnerType = new FieldSpec(FieldType.Int, "OwnerType");
        public static readonly FieldSpec PartySubID = new FieldSpec(FieldType.HashedSlice16, "PartySubID");
        public static readonly FieldSpec NestedPartyID = new FieldSpec(FieldType.HashedSlice16, "NestedPartyID");
        public static readonly FieldSpec NestedPartyIDSource = new FieldSpec(FieldType.Char, "NestedPartyIDSource");
        public static readonly FieldSpec SecondaryClOrdID = new FieldSpec(FieldType.HashedSlice16, "SecondaryClOrdID");
        public static readonly FieldSpec SecondaryExecID = new FieldSpec(FieldType.HashedSlice16, "SecondaryExecID");
        public static readonly FieldSpec OrderCapacity = new FieldSpec(FieldType.Char, "OrderCapacity");
        public static readonly FieldSpec OrderRestrictions = new FieldSpec(FieldType.HashedSlice16, "OrderRestrictions");
        public static readonly FieldSpec MassCancelRequestType = new FieldSpec(FieldType.Char, "MassCancelRequestType");
        public static readonly FieldSpec MassCancelResponse = new FieldSpec(FieldType.Char, "MassCancelResponse");
        public static readonly FieldSpec MassCancelRejectReason = new FieldSpec(FieldType.Int, "MassCancelRejectReason");
        public static readonly FieldSpec TotalAffectedOrders = new FieldSpec(FieldType.Int, "TotalAffectedOrders");
        public static readonly FieldSpec NoAffectedOrders = new FieldSpec(FieldType.Int, "NoAffectedOrders");
        public static readonly FieldSpec AffectedOrderID = new FieldSpec(FieldType.HashedSlice16, "AffectedOrderID");
        public static readonly FieldSpec AffectedSecondaryOrderID = new FieldSpec(FieldType.HashedSlice16, "AffectedSecondaryOrderID");
        public static readonly FieldSpec QuoteType = new FieldSpec(FieldType.Int, "QuoteType");
        public static readonly FieldSpec NestedPartyRole = new FieldSpec(FieldType.Int, "NestedPartyRole");
        public static readonly FieldSpec NoNestedPartyIDs = new FieldSpec(FieldType.Int, "NoNestedPartyIDs");
        public static readonly FieldSpec TotalAccruedInterestAmt = new FieldSpec(FieldType.Float, "TotalAccruedInterestAmt");
        public static readonly FieldSpec MaturityDate = new FieldSpec(FieldType.HashedSlice16, "MaturityDate");
        public static readonly FieldSpec UnderlyingMaturityDate = new FieldSpec(FieldType.HashedSlice16, "UnderlyingMaturityDate");
        public static readonly FieldSpec InstrRegistry = new FieldSpec(FieldType.HashedSlice16, "InstrRegistry");
        public static readonly FieldSpec CashMargin = new FieldSpec(FieldType.Char, "CashMargin");
        public static readonly FieldSpec NestedPartySubID = new FieldSpec(FieldType.HashedSlice16, "NestedPartySubID");
        public static readonly FieldSpec Scope = new FieldSpec(FieldType.HashedSlice16, "Scope");
        public static readonly FieldSpec MDImplicitDelete = new FieldSpec(FieldType.Char, "MDImplicitDelete");
        public static readonly FieldSpec CrossID = new FieldSpec(FieldType.HashedSlice16, "CrossID");
        public static readonly FieldSpec CrossType = new FieldSpec(FieldType.Int, "CrossType");
        public static readonly FieldSpec CrossPrioritization = new FieldSpec(FieldType.Int, "CrossPrioritization");
        public static readonly FieldSpec OrigCrossID = new FieldSpec(FieldType.HashedSlice16, "OrigCrossID");
        public static readonly FieldSpec NoSides = new FieldSpec(FieldType.Int, "NoSides");
        public static readonly FieldSpec Username = new FieldSpec(FieldType.HashedSlice16, "Username");
        public static readonly FieldSpec Password = new FieldSpec(FieldType.HashedSlice16, "Password");
        public static readonly FieldSpec NoLegs = new FieldSpec(FieldType.Int, "NoLegs");
        public static readonly FieldSpec LegCurrency = new FieldSpec(FieldType.HashedSlice16, "LegCurrency");
        public static readonly FieldSpec TotNoSecurityTypes = new FieldSpec(FieldType.Int, "TotNoSecurityTypes");
        public static readonly FieldSpec NoSecurityTypes = new FieldSpec(FieldType.Int, "NoSecurityTypes");
        public static readonly FieldSpec SecurityListRequestType = new FieldSpec(FieldType.Int, "SecurityListRequestType");
        public static readonly FieldSpec SecurityRequestResult = new FieldSpec(FieldType.Int, "SecurityRequestResult");
        public static readonly FieldSpec RoundLot = new FieldSpec(FieldType.Float, "RoundLot");
        public static readonly FieldSpec MinTradeVol = new FieldSpec(FieldType.Float, "MinTradeVol");
        public static readonly FieldSpec MultiLegRptTypeReq = new FieldSpec(FieldType.Int, "MultiLegRptTypeReq");
        public static readonly FieldSpec LegPositionEffect = new FieldSpec(FieldType.Char, "LegPositionEffect");
        public static readonly FieldSpec LegCoveredOrUncovered = new FieldSpec(FieldType.Int, "LegCoveredOrUncovered");
        public static readonly FieldSpec LegPrice = new FieldSpec(FieldType.Float, "LegPrice");
        public static readonly FieldSpec TradSesStatusRejReason = new FieldSpec(FieldType.Int, "TradSesStatusRejReason");
        public static readonly FieldSpec TradeRequestID = new FieldSpec(FieldType.HashedSlice16, "TradeRequestID");
        public static readonly FieldSpec TradeRequestType = new FieldSpec(FieldType.Int, "TradeRequestType");
        public static readonly FieldSpec PreviouslyReported = new FieldSpec(FieldType.Char, "PreviouslyReported");
        public static readonly FieldSpec TradeReportID = new FieldSpec(FieldType.HashedSlice16, "TradeReportID");
        public static readonly FieldSpec TradeReportRefID = new FieldSpec(FieldType.HashedSlice16, "TradeReportRefID");
        public static readonly FieldSpec MatchStatus = new FieldSpec(FieldType.Char, "MatchStatus");
        public static readonly FieldSpec MatchType = new FieldSpec(FieldType.HashedSlice16, "MatchType");
        public static readonly FieldSpec OddLot = new FieldSpec(FieldType.Char, "OddLot");
        public static readonly FieldSpec NoClearingInstructions = new FieldSpec(FieldType.Int, "NoClearingInstructions");
        public static readonly FieldSpec ClearingInstruction = new FieldSpec(FieldType.Int, "ClearingInstruction");
        public static readonly FieldSpec TradeInputSource = new FieldSpec(FieldType.HashedSlice16, "TradeInputSource");
        public static readonly FieldSpec TradeInputDevice = new FieldSpec(FieldType.HashedSlice16, "TradeInputDevice");
        public static readonly FieldSpec NoDates = new FieldSpec(FieldType.Int, "NoDates");
        public static readonly FieldSpec AccountType = new FieldSpec(FieldType.Int, "AccountType");
        public static readonly FieldSpec CustOrderCapacity = new FieldSpec(FieldType.Int, "CustOrderCapacity");
        public static readonly FieldSpec ClOrdLinkID = new FieldSpec(FieldType.HashedSlice16, "ClOrdLinkID");
        public static readonly FieldSpec MassStatusReqID = new FieldSpec(FieldType.HashedSlice16, "MassStatusReqID");
        public static readonly FieldSpec MassStatusReqType = new FieldSpec(FieldType.Int, "MassStatusReqType");
        public static readonly FieldSpec OrigOrdModTime = new FieldSpec(FieldType.HashedSlice16, "OrigOrdModTime");
        public static readonly FieldSpec LegSettlType = new FieldSpec(FieldType.HashedSlice16, "LegSettlType");
        public static readonly FieldSpec LegSettlDate = new FieldSpec(FieldType.HashedSlice16, "LegSettlDate");
        public static readonly FieldSpec DayBookingInst = new FieldSpec(FieldType.Char, "DayBookingInst");
        public static readonly FieldSpec BookingUnit = new FieldSpec(FieldType.Char, "BookingUnit");
        public static readonly FieldSpec PreallocMethod = new FieldSpec(FieldType.Char, "PreallocMethod");
        public static readonly FieldSpec UnderlyingCountryOfIssue = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCountryOfIssue");
        public static readonly FieldSpec UnderlyingStateOrProvinceOfIssue = new FieldSpec(FieldType.HashedSlice16, "UnderlyingStateOrProvinceOfIssue");
        public static readonly FieldSpec UnderlyingLocaleOfIssue = new FieldSpec(FieldType.HashedSlice16, "UnderlyingLocaleOfIssue");
        public static readonly FieldSpec UnderlyingInstrRegistry = new FieldSpec(FieldType.HashedSlice16, "UnderlyingInstrRegistry");
        public static readonly FieldSpec LegCountryOfIssue = new FieldSpec(FieldType.HashedSlice16, "LegCountryOfIssue");
        public static readonly FieldSpec LegStateOrProvinceOfIssue = new FieldSpec(FieldType.HashedSlice16, "LegStateOrProvinceOfIssue");
        public static readonly FieldSpec LegLocaleOfIssue = new FieldSpec(FieldType.HashedSlice16, "LegLocaleOfIssue");
        public static readonly FieldSpec LegInstrRegistry = new FieldSpec(FieldType.HashedSlice16, "LegInstrRegistry");
        public static readonly FieldSpec LegSymbol = new FieldSpec(FieldType.HashedSlice16, "LegSymbol");
        public static readonly FieldSpec LegSymbolSfx = new FieldSpec(FieldType.HashedSlice16, "LegSymbolSfx");
        public static readonly FieldSpec LegSecurityID = new FieldSpec(FieldType.HashedSlice16, "LegSecurityID");
        public static readonly FieldSpec LegSecurityIDSource = new FieldSpec(FieldType.HashedSlice16, "LegSecurityIDSource");
        public static readonly FieldSpec NoLegSecurityAltID = new FieldSpec(FieldType.Int, "NoLegSecurityAltID");
        public static readonly FieldSpec LegSecurityAltID = new FieldSpec(FieldType.HashedSlice16, "LegSecurityAltID");
        public static readonly FieldSpec LegSecurityAltIDSource = new FieldSpec(FieldType.HashedSlice16, "LegSecurityAltIDSource");
        public static readonly FieldSpec LegProduct = new FieldSpec(FieldType.Int, "LegProduct");
        public static readonly FieldSpec LegCFICode = new FieldSpec(FieldType.HashedSlice16, "LegCFICode");
        public static readonly FieldSpec LegSecurityType = new FieldSpec(FieldType.HashedSlice16, "LegSecurityType");
        public static readonly FieldSpec LegMaturityMonthYear = new FieldSpec(FieldType.HashedSlice16, "LegMaturityMonthYear");
        public static readonly FieldSpec LegMaturityDate = new FieldSpec(FieldType.HashedSlice16, "LegMaturityDate");
        public static readonly FieldSpec LegStrikePrice = new FieldSpec(FieldType.Float, "LegStrikePrice");
        public static readonly FieldSpec LegOptAttribute = new FieldSpec(FieldType.Char, "LegOptAttribute");
        public static readonly FieldSpec LegContractMultiplier = new FieldSpec(FieldType.Float, "LegContractMultiplier");
        public static readonly FieldSpec LegCouponRate = new FieldSpec(FieldType.Float, "LegCouponRate");
        public static readonly FieldSpec LegSecurityExchange = new FieldSpec(FieldType.HashedSlice16, "LegSecurityExchange");
        public static readonly FieldSpec LegIssuer = new FieldSpec(FieldType.HashedSlice16, "LegIssuer");
        public static readonly FieldSpec EncodedLegIssuerLen = new FieldSpec(FieldType.Int, "EncodedLegIssuerLen");
        public static readonly FieldSpec EncodedLegIssuer = new FieldSpec(FieldType.HashedSlice16, "EncodedLegIssuer");
        public static readonly FieldSpec LegSecurityDesc = new FieldSpec(FieldType.HashedSlice16, "LegSecurityDesc");
        public static readonly FieldSpec EncodedLegSecurityDescLen = new FieldSpec(FieldType.Int, "EncodedLegSecurityDescLen");
        public static readonly FieldSpec EncodedLegSecurityDesc = new FieldSpec(FieldType.HashedSlice16, "EncodedLegSecurityDesc");
        public static readonly FieldSpec LegRatioQty = new FieldSpec(FieldType.Float, "LegRatioQty");
        public static readonly FieldSpec LegSide = new FieldSpec(FieldType.Char, "LegSide");
        public static readonly FieldSpec TradingSessionSubID = new FieldSpec(FieldType.HashedSlice16, "TradingSessionSubID");
        public static readonly FieldSpec AllocType = new FieldSpec(FieldType.Int, "AllocType");
        public static readonly FieldSpec NoHops = new FieldSpec(FieldType.Int, "NoHops");
        public static readonly FieldSpec HopCompID = new FieldSpec(FieldType.HashedSlice16, "HopCompID");
        public static readonly FieldSpec HopSendingTime = new FieldSpec(FieldType.HashedSlice16, "HopSendingTime");
        public static readonly FieldSpec HopRefID = new FieldSpec(FieldType.Int, "HopRefID");
        public static readonly FieldSpec MidPx = new FieldSpec(FieldType.Float, "MidPx");
        public static readonly FieldSpec BidYield = new FieldSpec(FieldType.Float, "BidYield");
        public static readonly FieldSpec MidYield = new FieldSpec(FieldType.Float, "MidYield");
        public static readonly FieldSpec OfferYield = new FieldSpec(FieldType.Float, "OfferYield");
        public static readonly FieldSpec ClearingFeeIndicator = new FieldSpec(FieldType.HashedSlice16, "ClearingFeeIndicator");
        public static readonly FieldSpec WorkingIndicator = new FieldSpec(FieldType.Char, "WorkingIndicator");
        public static readonly FieldSpec LegLastPx = new FieldSpec(FieldType.Float, "LegLastPx");
        public static readonly FieldSpec PriorityIndicator = new FieldSpec(FieldType.Int, "PriorityIndicator");
        public static readonly FieldSpec PriceImprovement = new FieldSpec(FieldType.Float, "PriceImprovement");
        public static readonly FieldSpec Price2 = new FieldSpec(FieldType.Float, "Price2");
        public static readonly FieldSpec LastForwardPoints2 = new FieldSpec(FieldType.Float, "LastForwardPoints2");
        public static readonly FieldSpec BidForwardPoints2 = new FieldSpec(FieldType.Float, "BidForwardPoints2");
        public static readonly FieldSpec OfferForwardPoints2 = new FieldSpec(FieldType.Float, "OfferForwardPoints2");
        public static readonly FieldSpec RFQReqID = new FieldSpec(FieldType.HashedSlice16, "RFQReqID");
        public static readonly FieldSpec MktBidPx = new FieldSpec(FieldType.Float, "MktBidPx");
        public static readonly FieldSpec MktOfferPx = new FieldSpec(FieldType.Float, "MktOfferPx");
        public static readonly FieldSpec MinBidSize = new FieldSpec(FieldType.Float, "MinBidSize");
        public static readonly FieldSpec MinOfferSize = new FieldSpec(FieldType.Float, "MinOfferSize");
        public static readonly FieldSpec QuoteStatusReqID = new FieldSpec(FieldType.HashedSlice16, "QuoteStatusReqID");
        public static readonly FieldSpec LegalConfirm = new FieldSpec(FieldType.Char, "LegalConfirm");
        public static readonly FieldSpec UnderlyingLastPx = new FieldSpec(FieldType.Float, "UnderlyingLastPx");
        public static readonly FieldSpec UnderlyingLastQty = new FieldSpec(FieldType.Float, "UnderlyingLastQty");
        public static readonly FieldSpec LegRefID = new FieldSpec(FieldType.HashedSlice16, "LegRefID");
        public static readonly FieldSpec ContraLegRefID = new FieldSpec(FieldType.HashedSlice16, "ContraLegRefID");
        public static readonly FieldSpec SettlCurrBidFxRate = new FieldSpec(FieldType.Float, "SettlCurrBidFxRate");
        public static readonly FieldSpec SettlCurrOfferFxRate = new FieldSpec(FieldType.Float, "SettlCurrOfferFxRate");
        public static readonly FieldSpec QuoteRequestRejectReason = new FieldSpec(FieldType.Int, "QuoteRequestRejectReason");
        public static readonly FieldSpec SideComplianceID = new FieldSpec(FieldType.HashedSlice16, "SideComplianceID");
        public static readonly FieldSpec AcctIDSource = new FieldSpec(FieldType.Int, "AcctIDSource");
        public static readonly FieldSpec AllocAcctIDSource = new FieldSpec(FieldType.Int, "AllocAcctIDSource");
        public static readonly FieldSpec BenchmarkPrice = new FieldSpec(FieldType.Float, "BenchmarkPrice");
        public static readonly FieldSpec BenchmarkPriceType = new FieldSpec(FieldType.Int, "BenchmarkPriceType");
        public static readonly FieldSpec ConfirmID = new FieldSpec(FieldType.HashedSlice16, "ConfirmID");
        public static readonly FieldSpec ConfirmStatus = new FieldSpec(FieldType.Int, "ConfirmStatus");
        public static readonly FieldSpec ConfirmTransType = new FieldSpec(FieldType.Int, "ConfirmTransType");
        public static readonly FieldSpec ContractSettlMonth = new FieldSpec(FieldType.HashedSlice16, "ContractSettlMonth");
        public static readonly FieldSpec DeliveryForm = new FieldSpec(FieldType.Int, "DeliveryForm");
        public static readonly FieldSpec LastParPx = new FieldSpec(FieldType.Float, "LastParPx");
        public static readonly FieldSpec NoLegAllocs = new FieldSpec(FieldType.Int, "NoLegAllocs");
        public static readonly FieldSpec LegAllocAccount = new FieldSpec(FieldType.HashedSlice16, "LegAllocAccount");
        public static readonly FieldSpec LegIndividualAllocID = new FieldSpec(FieldType.HashedSlice16, "LegIndividualAllocID");
        public static readonly FieldSpec LegAllocQty = new FieldSpec(FieldType.Float, "LegAllocQty");
        public static readonly FieldSpec LegAllocAcctIDSource = new FieldSpec(FieldType.HashedSlice16, "LegAllocAcctIDSource");
        public static readonly FieldSpec LegSettlCurrency = new FieldSpec(FieldType.HashedSlice16, "LegSettlCurrency");
        public static readonly FieldSpec LegBenchmarkCurveCurrency = new FieldSpec(FieldType.HashedSlice16, "LegBenchmarkCurveCurrency");
        public static readonly FieldSpec LegBenchmarkCurveName = new FieldSpec(FieldType.HashedSlice16, "LegBenchmarkCurveName");
        public static readonly FieldSpec LegBenchmarkCurvePoint = new FieldSpec(FieldType.HashedSlice16, "LegBenchmarkCurvePoint");
        public static readonly FieldSpec LegBenchmarkPrice = new FieldSpec(FieldType.Float, "LegBenchmarkPrice");
        public static readonly FieldSpec LegBenchmarkPriceType = new FieldSpec(FieldType.Int, "LegBenchmarkPriceType");
        public static readonly FieldSpec LegBidPx = new FieldSpec(FieldType.Float, "LegBidPx");
        public static readonly FieldSpec LegIOIQty = new FieldSpec(FieldType.HashedSlice16, "LegIOIQty");
        public static readonly FieldSpec NoLegStipulations = new FieldSpec(FieldType.Int, "NoLegStipulations");
        public static readonly FieldSpec LegOfferPx = new FieldSpec(FieldType.Float, "LegOfferPx");
        public static readonly FieldSpec LegOrderQty = new FieldSpec(FieldType.Float, "LegOrderQty");
        public static readonly FieldSpec LegPriceType = new FieldSpec(FieldType.Int, "LegPriceType");
        public static readonly FieldSpec LegQty = new FieldSpec(FieldType.Float, "LegQty");
        public static readonly FieldSpec LegStipulationType = new FieldSpec(FieldType.HashedSlice16, "LegStipulationType");
        public static readonly FieldSpec LegStipulationValue = new FieldSpec(FieldType.HashedSlice16, "LegStipulationValue");
        public static readonly FieldSpec LegSwapType = new FieldSpec(FieldType.Int, "LegSwapType");
        public static readonly FieldSpec Pool = new FieldSpec(FieldType.HashedSlice16, "Pool");
        public static readonly FieldSpec QuotePriceType = new FieldSpec(FieldType.Int, "QuotePriceType");
        public static readonly FieldSpec QuoteRespID = new FieldSpec(FieldType.HashedSlice16, "QuoteRespID");
        public static readonly FieldSpec QuoteRespType = new FieldSpec(FieldType.Int, "QuoteRespType");
        public static readonly FieldSpec QuoteQualifier = new FieldSpec(FieldType.Char, "QuoteQualifier");
        public static readonly FieldSpec YieldRedemptionDate = new FieldSpec(FieldType.HashedSlice16, "YieldRedemptionDate");
        public static readonly FieldSpec YieldRedemptionPrice = new FieldSpec(FieldType.Float, "YieldRedemptionPrice");
        public static readonly FieldSpec YieldRedemptionPriceType = new FieldSpec(FieldType.Int, "YieldRedemptionPriceType");
        public static readonly FieldSpec BenchmarkSecurityID = new FieldSpec(FieldType.HashedSlice16, "BenchmarkSecurityID");
        public static readonly FieldSpec ReversalIndicator = new FieldSpec(FieldType.Char, "ReversalIndicator");
        public static readonly FieldSpec YieldCalcDate = new FieldSpec(FieldType.HashedSlice16, "YieldCalcDate");
        public static readonly FieldSpec NoPositions = new FieldSpec(FieldType.Int, "NoPositions");
        public static readonly FieldSpec PosType = new FieldSpec(FieldType.HashedSlice16, "PosType");
        public static readonly FieldSpec LongQty = new FieldSpec(FieldType.Float, "LongQty");
        public static readonly FieldSpec ShortQty = new FieldSpec(FieldType.Float, "ShortQty");
        public static readonly FieldSpec PosQtyStatus = new FieldSpec(FieldType.Int, "PosQtyStatus");
        public static readonly FieldSpec PosAmtType = new FieldSpec(FieldType.HashedSlice16, "PosAmtType");
        public static readonly FieldSpec PosAmt = new FieldSpec(FieldType.Float, "PosAmt");
        public static readonly FieldSpec PosTransType = new FieldSpec(FieldType.Int, "PosTransType");
        public static readonly FieldSpec PosReqID = new FieldSpec(FieldType.HashedSlice16, "PosReqID");
        public static readonly FieldSpec NoUnderlyings = new FieldSpec(FieldType.Int, "NoUnderlyings");
        public static readonly FieldSpec PosMaintAction = new FieldSpec(FieldType.Int, "PosMaintAction");
        public static readonly FieldSpec OrigPosReqRefID = new FieldSpec(FieldType.HashedSlice16, "OrigPosReqRefID");
        public static readonly FieldSpec PosMaintRptRefID = new FieldSpec(FieldType.HashedSlice16, "PosMaintRptRefID");
        public static readonly FieldSpec ClearingBusinessDate = new FieldSpec(FieldType.HashedSlice16, "ClearingBusinessDate");
        public static readonly FieldSpec SettlSessID = new FieldSpec(FieldType.HashedSlice16, "SettlSessID");
        public static readonly FieldSpec SettlSessSubID = new FieldSpec(FieldType.HashedSlice16, "SettlSessSubID");
        public static readonly FieldSpec AdjustmentType = new FieldSpec(FieldType.Int, "AdjustmentType");
        public static readonly FieldSpec ContraryInstructionIndicator = new FieldSpec(FieldType.Char, "ContraryInstructionIndicator");
        public static readonly FieldSpec PriorSpreadIndicator = new FieldSpec(FieldType.Char, "PriorSpreadIndicator");
        public static readonly FieldSpec PosMaintRptID = new FieldSpec(FieldType.HashedSlice16, "PosMaintRptID");
        public static readonly FieldSpec PosMaintStatus = new FieldSpec(FieldType.Int, "PosMaintStatus");
        public static readonly FieldSpec PosMaintResult = new FieldSpec(FieldType.Int, "PosMaintResult");
        public static readonly FieldSpec PosReqType = new FieldSpec(FieldType.Int, "PosReqType");
        public static readonly FieldSpec ResponseTransportType = new FieldSpec(FieldType.Int, "ResponseTransportType");
        public static readonly FieldSpec ResponseDestination = new FieldSpec(FieldType.HashedSlice16, "ResponseDestination");
        public static readonly FieldSpec TotalNumPosReports = new FieldSpec(FieldType.Int, "TotalNumPosReports");
        public static readonly FieldSpec PosReqResult = new FieldSpec(FieldType.Int, "PosReqResult");
        public static readonly FieldSpec PosReqStatus = new FieldSpec(FieldType.Int, "PosReqStatus");
        public static readonly FieldSpec SettlPrice = new FieldSpec(FieldType.Float, "SettlPrice");
        public static readonly FieldSpec SettlPriceType = new FieldSpec(FieldType.Int, "SettlPriceType");
        public static readonly FieldSpec UnderlyingSettlPrice = new FieldSpec(FieldType.Float, "UnderlyingSettlPrice");
        public static readonly FieldSpec UnderlyingSettlPriceType = new FieldSpec(FieldType.Int, "UnderlyingSettlPriceType");
        public static readonly FieldSpec PriorSettlPrice = new FieldSpec(FieldType.Float, "PriorSettlPrice");
        public static readonly FieldSpec NoQuoteQualifiers = new FieldSpec(FieldType.Int, "NoQuoteQualifiers");
        public static readonly FieldSpec AllocSettlCurrency = new FieldSpec(FieldType.HashedSlice16, "AllocSettlCurrency");
        public static readonly FieldSpec AllocSettlCurrAmt = new FieldSpec(FieldType.Float, "AllocSettlCurrAmt");
        public static readonly FieldSpec InterestAtMaturity = new FieldSpec(FieldType.Float, "InterestAtMaturity");
        public static readonly FieldSpec LegDatedDate = new FieldSpec(FieldType.HashedSlice16, "LegDatedDate");
        public static readonly FieldSpec LegPool = new FieldSpec(FieldType.HashedSlice16, "LegPool");
        public static readonly FieldSpec AllocInterestAtMaturity = new FieldSpec(FieldType.Float, "AllocInterestAtMaturity");
        public static readonly FieldSpec AllocAccruedInterestAmt = new FieldSpec(FieldType.Float, "AllocAccruedInterestAmt");
        public static readonly FieldSpec DeliveryDate = new FieldSpec(FieldType.HashedSlice16, "DeliveryDate");
        public static readonly FieldSpec AssignmentMethod = new FieldSpec(FieldType.Char, "AssignmentMethod");
        public static readonly FieldSpec AssignmentUnit = new FieldSpec(FieldType.Float, "AssignmentUnit");
        public static readonly FieldSpec OpenInterest = new FieldSpec(FieldType.Float, "OpenInterest");
        public static readonly FieldSpec ExerciseMethod = new FieldSpec(FieldType.Char, "ExerciseMethod");
        public static readonly FieldSpec TotNumTradeReports = new FieldSpec(FieldType.Int, "TotNumTradeReports");
        public static readonly FieldSpec TradeRequestResult = new FieldSpec(FieldType.Int, "TradeRequestResult");
        public static readonly FieldSpec TradeRequestStatus = new FieldSpec(FieldType.Int, "TradeRequestStatus");
        public static readonly FieldSpec TradeReportRejectReason = new FieldSpec(FieldType.Int, "TradeReportRejectReason");
        public static readonly FieldSpec SideMultiLegReportingType = new FieldSpec(FieldType.Int, "SideMultiLegReportingType");
        public static readonly FieldSpec NoPosAmt = new FieldSpec(FieldType.Int, "NoPosAmt");
        public static readonly FieldSpec AutoAcceptIndicator = new FieldSpec(FieldType.Char, "AutoAcceptIndicator");
        public static readonly FieldSpec AllocReportID = new FieldSpec(FieldType.HashedSlice16, "AllocReportID");
        public static readonly FieldSpec NoNested2PartyIDs = new FieldSpec(FieldType.Int, "NoNested2PartyIDs");
        public static readonly FieldSpec Nested2PartyID = new FieldSpec(FieldType.HashedSlice16, "Nested2PartyID");
        public static readonly FieldSpec Nested2PartyIDSource = new FieldSpec(FieldType.Char, "Nested2PartyIDSource");
        public static readonly FieldSpec Nested2PartyRole = new FieldSpec(FieldType.Int, "Nested2PartyRole");
        public static readonly FieldSpec Nested2PartySubID = new FieldSpec(FieldType.HashedSlice16, "Nested2PartySubID");
        public static readonly FieldSpec BenchmarkSecurityIDSource = new FieldSpec(FieldType.HashedSlice16, "BenchmarkSecurityIDSource");
        public static readonly FieldSpec SecuritySubType = new FieldSpec(FieldType.HashedSlice16, "SecuritySubType");
        public static readonly FieldSpec UnderlyingSecuritySubType = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSecuritySubType");
        public static readonly FieldSpec LegSecuritySubType = new FieldSpec(FieldType.HashedSlice16, "LegSecuritySubType");
        public static readonly FieldSpec AllowableOneSidednessPct = new FieldSpec(FieldType.Float, "AllowableOneSidednessPct");
        public static readonly FieldSpec AllowableOneSidednessValue = new FieldSpec(FieldType.Float, "AllowableOneSidednessValue");
        public static readonly FieldSpec AllowableOneSidednessCurr = new FieldSpec(FieldType.HashedSlice16, "AllowableOneSidednessCurr");
        public static readonly FieldSpec NoTrdRegTimestamps = new FieldSpec(FieldType.Int, "NoTrdRegTimestamps");
        public static readonly FieldSpec TrdRegTimestamp = new FieldSpec(FieldType.HashedSlice16, "TrdRegTimestamp");
        public static readonly FieldSpec TrdRegTimestampType = new FieldSpec(FieldType.Int, "TrdRegTimestampType");
        public static readonly FieldSpec TrdRegTimestampOrigin = new FieldSpec(FieldType.HashedSlice16, "TrdRegTimestampOrigin");
        public static readonly FieldSpec ConfirmRefID = new FieldSpec(FieldType.HashedSlice16, "ConfirmRefID");
        public static readonly FieldSpec ConfirmType = new FieldSpec(FieldType.Int, "ConfirmType");
        public static readonly FieldSpec ConfirmRejReason = new FieldSpec(FieldType.Int, "ConfirmRejReason");
        public static readonly FieldSpec BookingType = new FieldSpec(FieldType.Int, "BookingType");
        public static readonly FieldSpec IndividualAllocRejCode = new FieldSpec(FieldType.Int, "IndividualAllocRejCode");
        public static readonly FieldSpec SettlInstMsgID = new FieldSpec(FieldType.HashedSlice16, "SettlInstMsgID");
        public static readonly FieldSpec NoSettlInst = new FieldSpec(FieldType.Int, "NoSettlInst");
        public static readonly FieldSpec LastUpdateTime = new FieldSpec(FieldType.HashedSlice16, "LastUpdateTime");
        public static readonly FieldSpec AllocSettlInstType = new FieldSpec(FieldType.Int, "AllocSettlInstType");
        public static readonly FieldSpec NoSettlPartyIDs = new FieldSpec(FieldType.Int, "NoSettlPartyIDs");
        public static readonly FieldSpec SettlPartyID = new FieldSpec(FieldType.HashedSlice16, "SettlPartyID");
        public static readonly FieldSpec SettlPartyIDSource = new FieldSpec(FieldType.Char, "SettlPartyIDSource");
        public static readonly FieldSpec SettlPartyRole = new FieldSpec(FieldType.Int, "SettlPartyRole");
        public static readonly FieldSpec SettlPartySubID = new FieldSpec(FieldType.HashedSlice16, "SettlPartySubID");
        public static readonly FieldSpec SettlPartySubIDType = new FieldSpec(FieldType.Int, "SettlPartySubIDType");
        public static readonly FieldSpec DlvyInstType = new FieldSpec(FieldType.Char, "DlvyInstType");
        public static readonly FieldSpec TerminationType = new FieldSpec(FieldType.Int, "TerminationType");
        public static readonly FieldSpec NextExpectedMsgSeqNum = new FieldSpec(FieldType.Int, "NextExpectedMsgSeqNum");
        public static readonly FieldSpec OrdStatusReqID = new FieldSpec(FieldType.HashedSlice16, "OrdStatusReqID");
        public static readonly FieldSpec SettlInstReqID = new FieldSpec(FieldType.HashedSlice16, "SettlInstReqID");
        public static readonly FieldSpec SettlInstReqRejCode = new FieldSpec(FieldType.Int, "SettlInstReqRejCode");
        public static readonly FieldSpec SecondaryAllocID = new FieldSpec(FieldType.HashedSlice16, "SecondaryAllocID");
        public static readonly FieldSpec AllocReportType = new FieldSpec(FieldType.Int, "AllocReportType");
        public static readonly FieldSpec AllocReportRefID = new FieldSpec(FieldType.HashedSlice16, "AllocReportRefID");
        public static readonly FieldSpec AllocCancReplaceReason = new FieldSpec(FieldType.Int, "AllocCancReplaceReason");
        public static readonly FieldSpec CopyMsgIndicator = new FieldSpec(FieldType.Char, "CopyMsgIndicator");
        public static readonly FieldSpec AllocAccountType = new FieldSpec(FieldType.Int, "AllocAccountType");
        public static readonly FieldSpec OrderAvgPx = new FieldSpec(FieldType.Float, "OrderAvgPx");
        public static readonly FieldSpec OrderBookingQty = new FieldSpec(FieldType.Float, "OrderBookingQty");
        public static readonly FieldSpec NoSettlPartySubIDs = new FieldSpec(FieldType.Int, "NoSettlPartySubIDs");
        public static readonly FieldSpec NoPartySubIDs = new FieldSpec(FieldType.Int, "NoPartySubIDs");
        public static readonly FieldSpec PartySubIDType = new FieldSpec(FieldType.Int, "PartySubIDType");
        public static readonly FieldSpec NoNestedPartySubIDs = new FieldSpec(FieldType.Int, "NoNestedPartySubIDs");
        public static readonly FieldSpec NestedPartySubIDType = new FieldSpec(FieldType.Int, "NestedPartySubIDType");
        public static readonly FieldSpec NoNested2PartySubIDs = new FieldSpec(FieldType.Int, "NoNested2PartySubIDs");
        public static readonly FieldSpec Nested2PartySubIDType = new FieldSpec(FieldType.Int, "Nested2PartySubIDType");
        public static readonly FieldSpec AllocIntermedReqType = new FieldSpec(FieldType.Int, "AllocIntermedReqType");
        public static readonly FieldSpec UnderlyingPx = new FieldSpec(FieldType.Float, "UnderlyingPx");
        public static readonly FieldSpec PriceDelta = new FieldSpec(FieldType.Float, "PriceDelta");
        public static readonly FieldSpec ApplQueueMax = new FieldSpec(FieldType.Int, "ApplQueueMax");
        public static readonly FieldSpec ApplQueueDepth = new FieldSpec(FieldType.Int, "ApplQueueDepth");
        public static readonly FieldSpec ApplQueueResolution = new FieldSpec(FieldType.Int, "ApplQueueResolution");
        public static readonly FieldSpec ApplQueueAction = new FieldSpec(FieldType.Int, "ApplQueueAction");
        public static readonly FieldSpec NoAltMDSource = new FieldSpec(FieldType.Int, "NoAltMDSource");
        public static readonly FieldSpec AltMDSourceID = new FieldSpec(FieldType.HashedSlice16, "AltMDSourceID");
        public static readonly FieldSpec SecondaryTradeReportID = new FieldSpec(FieldType.HashedSlice16, "SecondaryTradeReportID");
        public static readonly FieldSpec AvgPxIndicator = new FieldSpec(FieldType.Int, "AvgPxIndicator");
        public static readonly FieldSpec TradeLinkID = new FieldSpec(FieldType.HashedSlice16, "TradeLinkID");
        public static readonly FieldSpec OrderInputDevice = new FieldSpec(FieldType.HashedSlice16, "OrderInputDevice");
        public static readonly FieldSpec UnderlyingTradingSessionID = new FieldSpec(FieldType.HashedSlice16, "UnderlyingTradingSessionID");
        public static readonly FieldSpec UnderlyingTradingSessionSubID = new FieldSpec(FieldType.HashedSlice16, "UnderlyingTradingSessionSubID");
        public static readonly FieldSpec TradeLegRefID = new FieldSpec(FieldType.HashedSlice16, "TradeLegRefID");
        public static readonly FieldSpec ExchangeRule = new FieldSpec(FieldType.HashedSlice16, "ExchangeRule");
        public static readonly FieldSpec TradeAllocIndicator = new FieldSpec(FieldType.Int, "TradeAllocIndicator");
        public static readonly FieldSpec ExpirationCycle = new FieldSpec(FieldType.Int, "ExpirationCycle");
        public static readonly FieldSpec TrdType = new FieldSpec(FieldType.Int, "TrdType");
        public static readonly FieldSpec TrdSubType = new FieldSpec(FieldType.Int, "TrdSubType");
        public static readonly FieldSpec TransferReason = new FieldSpec(FieldType.HashedSlice16, "TransferReason");
        public static readonly FieldSpec TotNumAssignmentReports = new FieldSpec(FieldType.Int, "TotNumAssignmentReports");
        public static readonly FieldSpec AsgnRptID = new FieldSpec(FieldType.HashedSlice16, "AsgnRptID");
        public static readonly FieldSpec ThresholdAmount = new FieldSpec(FieldType.Float, "ThresholdAmount");
        public static readonly FieldSpec PegMoveType = new FieldSpec(FieldType.Int, "PegMoveType");
        public static readonly FieldSpec PegOffsetType = new FieldSpec(FieldType.Int, "PegOffsetType");
        public static readonly FieldSpec PegLimitType = new FieldSpec(FieldType.Int, "PegLimitType");
        public static readonly FieldSpec PegRoundDirection = new FieldSpec(FieldType.Int, "PegRoundDirection");
        public static readonly FieldSpec PeggedPrice = new FieldSpec(FieldType.Float, "PeggedPrice");
        public static readonly FieldSpec PegScope = new FieldSpec(FieldType.Int, "PegScope");
        public static readonly FieldSpec DiscretionMoveType = new FieldSpec(FieldType.Int, "DiscretionMoveType");
        public static readonly FieldSpec DiscretionOffsetType = new FieldSpec(FieldType.Int, "DiscretionOffsetType");
        public static readonly FieldSpec DiscretionLimitType = new FieldSpec(FieldType.Int, "DiscretionLimitType");
        public static readonly FieldSpec DiscretionRoundDirection = new FieldSpec(FieldType.Int, "DiscretionRoundDirection");
        public static readonly FieldSpec DiscretionPrice = new FieldSpec(FieldType.Float, "DiscretionPrice");
        public static readonly FieldSpec DiscretionScope = new FieldSpec(FieldType.Int, "DiscretionScope");
        public static readonly FieldSpec TargetStrategy = new FieldSpec(FieldType.Int, "TargetStrategy");
        public static readonly FieldSpec TargetStrategyParameters = new FieldSpec(FieldType.HashedSlice16, "TargetStrategyParameters");
        public static readonly FieldSpec ParticipationRate = new FieldSpec(FieldType.Float, "ParticipationRate");
        public static readonly FieldSpec TargetStrategyPerformance = new FieldSpec(FieldType.Float, "TargetStrategyPerformance");
        public static readonly FieldSpec LastLiquidityInd = new FieldSpec(FieldType.Int, "LastLiquidityInd");
        public static readonly FieldSpec PublishTrdIndicator = new FieldSpec(FieldType.Char, "PublishTrdIndicator");
        public static readonly FieldSpec ShortSaleReason = new FieldSpec(FieldType.Int, "ShortSaleReason");
        public static readonly FieldSpec QtyType = new FieldSpec(FieldType.Int, "QtyType");
        public static readonly FieldSpec SecondaryTrdType = new FieldSpec(FieldType.Int, "SecondaryTrdType");
        public static readonly FieldSpec TradeReportType = new FieldSpec(FieldType.Int, "TradeReportType");
        public static readonly FieldSpec AllocNoOrdersType = new FieldSpec(FieldType.Int, "AllocNoOrdersType");
        public static readonly FieldSpec SharedCommission = new FieldSpec(FieldType.Float, "SharedCommission");
        public static readonly FieldSpec ConfirmReqID = new FieldSpec(FieldType.HashedSlice16, "ConfirmReqID");
        public static readonly FieldSpec AvgParPx = new FieldSpec(FieldType.Float, "AvgParPx");
        public static readonly FieldSpec ReportedPx = new FieldSpec(FieldType.Float, "ReportedPx");
        public static readonly FieldSpec NoCapacities = new FieldSpec(FieldType.Int, "NoCapacities");
        public static readonly FieldSpec OrderCapacityQty = new FieldSpec(FieldType.Float, "OrderCapacityQty");
        public static readonly FieldSpec NoEvents = new FieldSpec(FieldType.Int, "NoEvents");
        public static readonly FieldSpec EventType = new FieldSpec(FieldType.Int, "EventType");
        public static readonly FieldSpec EventDate = new FieldSpec(FieldType.HashedSlice16, "EventDate");
        public static readonly FieldSpec EventPx = new FieldSpec(FieldType.Float, "EventPx");
        public static readonly FieldSpec EventText = new FieldSpec(FieldType.HashedSlice16, "EventText");
        public static readonly FieldSpec PctAtRisk = new FieldSpec(FieldType.Float, "PctAtRisk");
        public static readonly FieldSpec NoInstrAttrib = new FieldSpec(FieldType.Int, "NoInstrAttrib");
        public static readonly FieldSpec InstrAttribType = new FieldSpec(FieldType.Int, "InstrAttribType");
        public static readonly FieldSpec InstrAttribValue = new FieldSpec(FieldType.HashedSlice16, "InstrAttribValue");
        public static readonly FieldSpec DatedDate = new FieldSpec(FieldType.HashedSlice16, "DatedDate");
        public static readonly FieldSpec InterestAccrualDate = new FieldSpec(FieldType.HashedSlice16, "InterestAccrualDate");
        public static readonly FieldSpec CPProgram = new FieldSpec(FieldType.Int, "CPProgram");
        public static readonly FieldSpec CPRegType = new FieldSpec(FieldType.HashedSlice16, "CPRegType");
        public static readonly FieldSpec UnderlyingCPProgram = new FieldSpec(FieldType.Int, "UnderlyingCPProgram");
        public static readonly FieldSpec UnderlyingCPRegType = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCPRegType");
        public static readonly FieldSpec UnderlyingQty = new FieldSpec(FieldType.Float, "UnderlyingQty");
        public static readonly FieldSpec TrdMatchID = new FieldSpec(FieldType.HashedSlice16, "TrdMatchID");
        public static readonly FieldSpec SecondaryTradeReportRefID = new FieldSpec(FieldType.HashedSlice16, "SecondaryTradeReportRefID");
        public static readonly FieldSpec UnderlyingDirtyPrice = new FieldSpec(FieldType.Float, "UnderlyingDirtyPrice");
        public static readonly FieldSpec UnderlyingEndPrice = new FieldSpec(FieldType.Float, "UnderlyingEndPrice");
        public static readonly FieldSpec UnderlyingStartValue = new FieldSpec(FieldType.Float, "UnderlyingStartValue");
        public static readonly FieldSpec UnderlyingCurrentValue = new FieldSpec(FieldType.Float, "UnderlyingCurrentValue");
        public static readonly FieldSpec UnderlyingEndValue = new FieldSpec(FieldType.Float, "UnderlyingEndValue");
        public static readonly FieldSpec NoUnderlyingStips = new FieldSpec(FieldType.Int, "NoUnderlyingStips");
        public static readonly FieldSpec UnderlyingStipType = new FieldSpec(FieldType.HashedSlice16, "UnderlyingStipType");
        public static readonly FieldSpec UnderlyingStipValue = new FieldSpec(FieldType.HashedSlice16, "UnderlyingStipValue");
        public static readonly FieldSpec MaturityNetMoney = new FieldSpec(FieldType.Float, "MaturityNetMoney");
        public static readonly FieldSpec MiscFeeBasis = new FieldSpec(FieldType.Int, "MiscFeeBasis");
        public static readonly FieldSpec TotNoAllocs = new FieldSpec(FieldType.Int, "TotNoAllocs");
        public static readonly FieldSpec LastFragment = new FieldSpec(FieldType.Char, "LastFragment");
        public static readonly FieldSpec CollReqID = new FieldSpec(FieldType.HashedSlice16, "CollReqID");
        public static readonly FieldSpec CollAsgnReason = new FieldSpec(FieldType.Int, "CollAsgnReason");
        public static readonly FieldSpec CollInquiryQualifier = new FieldSpec(FieldType.Int, "CollInquiryQualifier");
        public static readonly FieldSpec NoTrades = new FieldSpec(FieldType.Int, "NoTrades");
        public static readonly FieldSpec MarginRatio = new FieldSpec(FieldType.Float, "MarginRatio");
        public static readonly FieldSpec MarginExcess = new FieldSpec(FieldType.Float, "MarginExcess");
        public static readonly FieldSpec TotalNetValue = new FieldSpec(FieldType.Float, "TotalNetValue");
        public static readonly FieldSpec CashOutstanding = new FieldSpec(FieldType.Float, "CashOutstanding");
        public static readonly FieldSpec CollAsgnID = new FieldSpec(FieldType.HashedSlice16, "CollAsgnID");
        public static readonly FieldSpec CollAsgnTransType = new FieldSpec(FieldType.Int, "CollAsgnTransType");
        public static readonly FieldSpec CollRespID = new FieldSpec(FieldType.HashedSlice16, "CollRespID");
        public static readonly FieldSpec CollAsgnRespType = new FieldSpec(FieldType.Int, "CollAsgnRespType");
        public static readonly FieldSpec CollAsgnRejectReason = new FieldSpec(FieldType.Int, "CollAsgnRejectReason");
        public static readonly FieldSpec CollAsgnRefID = new FieldSpec(FieldType.HashedSlice16, "CollAsgnRefID");
        public static readonly FieldSpec CollRptID = new FieldSpec(FieldType.HashedSlice16, "CollRptID");
        public static readonly FieldSpec CollInquiryID = new FieldSpec(FieldType.HashedSlice16, "CollInquiryID");
        public static readonly FieldSpec CollStatus = new FieldSpec(FieldType.Int, "CollStatus");
        public static readonly FieldSpec TotNumReports = new FieldSpec(FieldType.Int, "TotNumReports");
        public static readonly FieldSpec LastRptRequested = new FieldSpec(FieldType.Char, "LastRptRequested");
        public static readonly FieldSpec AgreementDesc = new FieldSpec(FieldType.HashedSlice16, "AgreementDesc");
        public static readonly FieldSpec AgreementID = new FieldSpec(FieldType.HashedSlice16, "AgreementID");
        public static readonly FieldSpec AgreementDate = new FieldSpec(FieldType.HashedSlice16, "AgreementDate");
        public static readonly FieldSpec StartDate = new FieldSpec(FieldType.HashedSlice16, "StartDate");
        public static readonly FieldSpec EndDate = new FieldSpec(FieldType.HashedSlice16, "EndDate");
        public static readonly FieldSpec AgreementCurrency = new FieldSpec(FieldType.HashedSlice16, "AgreementCurrency");
        public static readonly FieldSpec DeliveryType = new FieldSpec(FieldType.Int, "DeliveryType");
        public static readonly FieldSpec EndAccruedInterestAmt = new FieldSpec(FieldType.Float, "EndAccruedInterestAmt");
        public static readonly FieldSpec StartCash = new FieldSpec(FieldType.Float, "StartCash");
        public static readonly FieldSpec EndCash = new FieldSpec(FieldType.Float, "EndCash");
        public static readonly FieldSpec UserRequestID = new FieldSpec(FieldType.HashedSlice16, "UserRequestID");
        public static readonly FieldSpec UserRequestType = new FieldSpec(FieldType.Int, "UserRequestType");
        public static readonly FieldSpec NewPassword = new FieldSpec(FieldType.HashedSlice16, "NewPassword");
        public static readonly FieldSpec UserStatus = new FieldSpec(FieldType.Int, "UserStatus");
        public static readonly FieldSpec UserStatusText = new FieldSpec(FieldType.HashedSlice16, "UserStatusText");
        public static readonly FieldSpec StatusValue = new FieldSpec(FieldType.Int, "StatusValue");
        public static readonly FieldSpec StatusText = new FieldSpec(FieldType.HashedSlice16, "StatusText");
        public static readonly FieldSpec RefCompID = new FieldSpec(FieldType.HashedSlice16, "RefCompID");
        public static readonly FieldSpec RefSubID = new FieldSpec(FieldType.HashedSlice16, "RefSubID");
        public static readonly FieldSpec NetworkResponseID = new FieldSpec(FieldType.HashedSlice16, "NetworkResponseID");
        public static readonly FieldSpec NetworkRequestID = new FieldSpec(FieldType.HashedSlice16, "NetworkRequestID");
        public static readonly FieldSpec LastNetworkResponseID = new FieldSpec(FieldType.HashedSlice16, "LastNetworkResponseID");
        public static readonly FieldSpec NetworkRequestType = new FieldSpec(FieldType.Int, "NetworkRequestType");
        public static readonly FieldSpec NoCompIDs = new FieldSpec(FieldType.Int, "NoCompIDs");
        public static readonly FieldSpec NetworkStatusResponseType = new FieldSpec(FieldType.Int, "NetworkStatusResponseType");
        public static readonly FieldSpec NoCollInquiryQualifier = new FieldSpec(FieldType.Int, "NoCollInquiryQualifier");
        public static readonly FieldSpec TrdRptStatus = new FieldSpec(FieldType.Int, "TrdRptStatus");
        public static readonly FieldSpec AffirmStatus = new FieldSpec(FieldType.Int, "AffirmStatus");
        public static readonly FieldSpec UnderlyingStrikeCurrency = new FieldSpec(FieldType.HashedSlice16, "UnderlyingStrikeCurrency");
        public static readonly FieldSpec LegStrikeCurrency = new FieldSpec(FieldType.HashedSlice16, "LegStrikeCurrency");
        public static readonly FieldSpec TimeBracket = new FieldSpec(FieldType.HashedSlice16, "TimeBracket");
        public static readonly FieldSpec CollAction = new FieldSpec(FieldType.Int, "CollAction");
        public static readonly FieldSpec CollInquiryStatus = new FieldSpec(FieldType.Int, "CollInquiryStatus");
        public static readonly FieldSpec CollInquiryResult = new FieldSpec(FieldType.Int, "CollInquiryResult");
        public static readonly FieldSpec StrikeCurrency = new FieldSpec(FieldType.HashedSlice16, "StrikeCurrency");
        public static readonly FieldSpec NoNested3PartyIDs = new FieldSpec(FieldType.Int, "NoNested3PartyIDs");
        public static readonly FieldSpec Nested3PartyID = new FieldSpec(FieldType.HashedSlice16, "Nested3PartyID");
        public static readonly FieldSpec Nested3PartyIDSource = new FieldSpec(FieldType.Char, "Nested3PartyIDSource");
        public static readonly FieldSpec Nested3PartyRole = new FieldSpec(FieldType.Int, "Nested3PartyRole");
        public static readonly FieldSpec NoNested3PartySubIDs = new FieldSpec(FieldType.Int, "NoNested3PartySubIDs");
        public static readonly FieldSpec Nested3PartySubID = new FieldSpec(FieldType.HashedSlice16, "Nested3PartySubID");
        public static readonly FieldSpec Nested3PartySubIDType = new FieldSpec(FieldType.Int, "Nested3PartySubIDType");
        public static readonly FieldSpec LegContractSettlMonth = new FieldSpec(FieldType.HashedSlice16, "LegContractSettlMonth");
        public static readonly FieldSpec LegInterestAccrualDate = new FieldSpec(FieldType.HashedSlice16, "LegInterestAccrualDate");
        public static readonly FieldSpec NoStrategyParameters = new FieldSpec(FieldType.Int, "NoStrategyParameters");
        public static readonly FieldSpec StrategyParameterName = new FieldSpec(FieldType.HashedSlice16, "StrategyParameterName");
        public static readonly FieldSpec StrategyParameterType = new FieldSpec(FieldType.Int, "StrategyParameterType");
        public static readonly FieldSpec StrategyParameterValue = new FieldSpec(FieldType.HashedSlice16, "StrategyParameterValue");
        public static readonly FieldSpec HostCrossID = new FieldSpec(FieldType.HashedSlice16, "HostCrossID");
        public static readonly FieldSpec SideTimeInForce = new FieldSpec(FieldType.HashedSlice16, "SideTimeInForce");
        public static readonly FieldSpec MDReportID = new FieldSpec(FieldType.Int, "MDReportID");
        public static readonly FieldSpec SecurityReportID = new FieldSpec(FieldType.Int, "SecurityReportID");
        public static readonly FieldSpec SecurityStatus = new FieldSpec(FieldType.HashedSlice16, "SecurityStatus");
        public static readonly FieldSpec SettleOnOpenFlag = new FieldSpec(FieldType.HashedSlice16, "SettleOnOpenFlag");
        public static readonly FieldSpec StrikeMultiplier = new FieldSpec(FieldType.Float, "StrikeMultiplier");
        public static readonly FieldSpec StrikeValue = new FieldSpec(FieldType.Float, "StrikeValue");
        public static readonly FieldSpec MinPriceIncrement = new FieldSpec(FieldType.Float, "MinPriceIncrement");
        public static readonly FieldSpec PositionLimit = new FieldSpec(FieldType.Int, "PositionLimit");
        public static readonly FieldSpec NTPositionLimit = new FieldSpec(FieldType.Int, "NTPositionLimit");
        public static readonly FieldSpec UnderlyingAllocationPercent = new FieldSpec(FieldType.Float, "UnderlyingAllocationPercent");
        public static readonly FieldSpec UnderlyingCashAmount = new FieldSpec(FieldType.Float, "UnderlyingCashAmount");
        public static readonly FieldSpec UnderlyingCashType = new FieldSpec(FieldType.HashedSlice16, "UnderlyingCashType");
        public static readonly FieldSpec UnderlyingSettlementType = new FieldSpec(FieldType.Int, "UnderlyingSettlementType");
        public static readonly FieldSpec QuantityDate = new FieldSpec(FieldType.HashedSlice16, "QuantityDate");
        public static readonly FieldSpec ContIntRptID = new FieldSpec(FieldType.HashedSlice16, "ContIntRptID");
        public static readonly FieldSpec LateIndicator = new FieldSpec(FieldType.Char, "LateIndicator");
        public static readonly FieldSpec InputSource = new FieldSpec(FieldType.HashedSlice16, "InputSource");
        public static readonly FieldSpec SecurityUpdateAction = new FieldSpec(FieldType.Char, "SecurityUpdateAction");
        public static readonly FieldSpec NoExpiration = new FieldSpec(FieldType.Int, "NoExpiration");
        public static readonly FieldSpec ExpirationQtyType = new FieldSpec(FieldType.Int, "ExpirationQtyType");
        public static readonly FieldSpec ExpQty = new FieldSpec(FieldType.Float, "ExpQty");
        public static readonly FieldSpec NoUnderlyingAmounts = new FieldSpec(FieldType.Int, "NoUnderlyingAmounts");
        public static readonly FieldSpec UnderlyingPayAmount = new FieldSpec(FieldType.Float, "UnderlyingPayAmount");
        public static readonly FieldSpec UnderlyingCollectAmount = new FieldSpec(FieldType.Float, "UnderlyingCollectAmount");
        public static readonly FieldSpec UnderlyingSettlementDate = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSettlementDate");
        public static readonly FieldSpec UnderlyingSettlementStatus = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSettlementStatus");
        public static readonly FieldSpec SecondaryIndividualAllocID = new FieldSpec(FieldType.HashedSlice16, "SecondaryIndividualAllocID");
        public static readonly FieldSpec LegReportID = new FieldSpec(FieldType.HashedSlice16, "LegReportID");
        public static readonly FieldSpec RndPx = new FieldSpec(FieldType.Float, "RndPx");
        public static readonly FieldSpec IndividualAllocType = new FieldSpec(FieldType.Int, "IndividualAllocType");
        public static readonly FieldSpec AllocCustomerCapacity = new FieldSpec(FieldType.HashedSlice16, "AllocCustomerCapacity");
        public static readonly FieldSpec TierCode = new FieldSpec(FieldType.HashedSlice16, "TierCode");
        public static readonly FieldSpec UnitOfMeasure = new FieldSpec(FieldType.HashedSlice16, "UnitOfMeasure");
        public static readonly FieldSpec TimeUnit = new FieldSpec(FieldType.HashedSlice16, "TimeUnit");
        public static readonly FieldSpec UnderlyingUnitOfMeasure = new FieldSpec(FieldType.HashedSlice16, "UnderlyingUnitOfMeasure");
        public static readonly FieldSpec LegUnitOfMeasure = new FieldSpec(FieldType.HashedSlice16, "LegUnitOfMeasure");
        public static readonly FieldSpec UnderlyingTimeUnit = new FieldSpec(FieldType.HashedSlice16, "UnderlyingTimeUnit");
        public static readonly FieldSpec LegTimeUnit = new FieldSpec(FieldType.HashedSlice16, "LegTimeUnit");
        public static readonly FieldSpec AllocMethod = new FieldSpec(FieldType.Int, "AllocMethod");
        public static readonly FieldSpec TradeID = new FieldSpec(FieldType.HashedSlice16, "TradeID");
        public static readonly FieldSpec SideTradeReportID = new FieldSpec(FieldType.HashedSlice16, "SideTradeReportID");
        public static readonly FieldSpec SideFillStationCd = new FieldSpec(FieldType.HashedSlice16, "SideFillStationCd");
        public static readonly FieldSpec SideReasonCd = new FieldSpec(FieldType.HashedSlice16, "SideReasonCd");
        public static readonly FieldSpec SideTrdSubTyp = new FieldSpec(FieldType.Int, "SideTrdSubTyp");
        public static readonly FieldSpec SideLastQty = new FieldSpec(FieldType.Float, "SideLastQty");
        public static readonly FieldSpec MessageEventSource = new FieldSpec(FieldType.HashedSlice16, "MessageEventSource");
        public static readonly FieldSpec SideTrdRegTimestamp = new FieldSpec(FieldType.HashedSlice16, "SideTrdRegTimestamp");
        public static readonly FieldSpec SideTrdRegTimestampType = new FieldSpec(FieldType.Int, "SideTrdRegTimestampType");
        public static readonly FieldSpec SideTrdRegTimestampSrc = new FieldSpec(FieldType.HashedSlice16, "SideTrdRegTimestampSrc");
        public static readonly FieldSpec AsOfIndicator = new FieldSpec(FieldType.Char, "AsOfIndicator");
        public static readonly FieldSpec NoSideTrdRegTS = new FieldSpec(FieldType.Int, "NoSideTrdRegTS");
        public static readonly FieldSpec LegOptionRatio = new FieldSpec(FieldType.Float, "LegOptionRatio");
        public static readonly FieldSpec NoInstrumentParties = new FieldSpec(FieldType.Int, "NoInstrumentParties");
        public static readonly FieldSpec InstrumentPartyID = new FieldSpec(FieldType.HashedSlice16, "InstrumentPartyID");
        public static readonly FieldSpec TradeVolume = new FieldSpec(FieldType.Float, "TradeVolume");
        public static readonly FieldSpec MDBookType = new FieldSpec(FieldType.Int, "MDBookType");
        public static readonly FieldSpec MDFeedType = new FieldSpec(FieldType.HashedSlice16, "MDFeedType");
        public static readonly FieldSpec MDPriceLevel = new FieldSpec(FieldType.Int, "MDPriceLevel");
        public static readonly FieldSpec MDOriginType = new FieldSpec(FieldType.Int, "MDOriginType");
        public static readonly FieldSpec FirstPx = new FieldSpec(FieldType.Float, "FirstPx");
        public static readonly FieldSpec MDEntrySpotRate = new FieldSpec(FieldType.Float, "MDEntrySpotRate");
        public static readonly FieldSpec MDEntryForwardPoints = new FieldSpec(FieldType.Float, "MDEntryForwardPoints");
        public static readonly FieldSpec ManualOrderIndicator = new FieldSpec(FieldType.Char, "ManualOrderIndicator");
        public static readonly FieldSpec CustDirectedOrder = new FieldSpec(FieldType.Char, "CustDirectedOrder");
        public static readonly FieldSpec ReceivedDeptID = new FieldSpec(FieldType.HashedSlice16, "ReceivedDeptID");
        public static readonly FieldSpec CustOrderHandlingInst = new FieldSpec(FieldType.HashedSlice16, "CustOrderHandlingInst");
        public static readonly FieldSpec OrderHandlingInstSource = new FieldSpec(FieldType.Int, "OrderHandlingInstSource");
        public static readonly FieldSpec DeskType = new FieldSpec(FieldType.HashedSlice16, "DeskType");
        public static readonly FieldSpec DeskTypeSource = new FieldSpec(FieldType.Int, "DeskTypeSource");
        public static readonly FieldSpec DeskOrderHandlingInst = new FieldSpec(FieldType.HashedSlice16, "DeskOrderHandlingInst");
        public static readonly FieldSpec ExecAckStatus = new FieldSpec(FieldType.Char, "ExecAckStatus");
        public static readonly FieldSpec UnderlyingDeliveryAmount = new FieldSpec(FieldType.Float, "UnderlyingDeliveryAmount");
        public static readonly FieldSpec UnderlyingCapValue = new FieldSpec(FieldType.Float, "UnderlyingCapValue");
        public static readonly FieldSpec UnderlyingSettlMethod = new FieldSpec(FieldType.HashedSlice16, "UnderlyingSettlMethod");
        public static readonly FieldSpec SecondaryTradeID = new FieldSpec(FieldType.HashedSlice16, "SecondaryTradeID");
        public static readonly FieldSpec FirmTradeID = new FieldSpec(FieldType.HashedSlice16, "FirmTradeID");
        public static readonly FieldSpec SecondaryFirmTradeID = new FieldSpec(FieldType.HashedSlice16, "SecondaryFirmTradeID");
        public static readonly FieldSpec CollApplType = new FieldSpec(FieldType.Int, "CollApplType");
        public static readonly FieldSpec UnderlyingAdjustedQuantity = new FieldSpec(FieldType.Float, "UnderlyingAdjustedQuantity");
        public static readonly FieldSpec UnderlyingFXRate = new FieldSpec(FieldType.Float, "UnderlyingFXRate");
        public static readonly FieldSpec UnderlyingFXRateCalc = new FieldSpec(FieldType.Char, "UnderlyingFXRateCalc");
        public static readonly FieldSpec AllocPositionEffect = new FieldSpec(FieldType.Char, "AllocPositionEffect");
        public static readonly FieldSpec DealingCapacity = new FieldSpec(FieldType.Char, "DealingCapacity");
        public static readonly FieldSpec InstrmtAssignmentMethod = new FieldSpec(FieldType.Char, "InstrmtAssignmentMethod");
        public static readonly FieldSpec InstrumentPartyIDSource = new FieldSpec(FieldType.Char, "InstrumentPartyIDSource");
        public static readonly FieldSpec InstrumentPartyRole = new FieldSpec(FieldType.Int, "InstrumentPartyRole");
        public static readonly FieldSpec NoInstrumentPartySubIDs = new FieldSpec(FieldType.Int, "NoInstrumentPartySubIDs");
        public static readonly FieldSpec InstrumentPartySubID = new FieldSpec(FieldType.HashedSlice16, "InstrumentPartySubID");
        public static readonly FieldSpec InstrumentPartySubIDType = new FieldSpec(FieldType.Int, "InstrumentPartySubIDType");
        public static readonly FieldSpec PositionCurrency = new FieldSpec(FieldType.HashedSlice16, "PositionCurrency");
        public static readonly FieldSpec CalculatedCcyLastQty = new FieldSpec(FieldType.Float, "CalculatedCcyLastQty");
        public static readonly FieldSpec AggressorIndicator = new FieldSpec(FieldType.Char, "AggressorIndicator");
        public static readonly FieldSpec NoUndlyInstrumentParties = new FieldSpec(FieldType.Int, "NoUndlyInstrumentParties");
        public static readonly FieldSpec UnderlyingInstrumentPartyID = new FieldSpec(FieldType.HashedSlice16, "UnderlyingInstrumentPartyID");
        public static readonly FieldSpec UnderlyingInstrumentPartyIDSource = new FieldSpec(FieldType.Char, "UnderlyingInstrumentPartyIDSource");
        public static readonly FieldSpec UnderlyingInstrumentPartyRole = new FieldSpec(FieldType.Int, "UnderlyingInstrumentPartyRole");
        public static readonly FieldSpec NoUndlyInstrumentPartySubIDs = new FieldSpec(FieldType.Int, "NoUndlyInstrumentPartySubIDs");
        public static readonly FieldSpec UnderlyingInstrumentPartySubID = new FieldSpec(FieldType.HashedSlice16, "UnderlyingInstrumentPartySubID");
        public static readonly FieldSpec UnderlyingInstrumentPartySubIDType = new FieldSpec(FieldType.Int, "UnderlyingInstrumentPartySubIDType");
        public static readonly FieldSpec BidSwapPoints = new FieldSpec(FieldType.Float, "BidSwapPoints");
        public static readonly FieldSpec OfferSwapPoints = new FieldSpec(FieldType.Float, "OfferSwapPoints");
        public static readonly FieldSpec LegBidForwardPoints = new FieldSpec(FieldType.Float, "LegBidForwardPoints");
        public static readonly FieldSpec LegOfferForwardPoints = new FieldSpec(FieldType.Float, "LegOfferForwardPoints");
        public static readonly FieldSpec SwapPoints = new FieldSpec(FieldType.Float, "SwapPoints");
        public static readonly FieldSpec MDQuoteType = new FieldSpec(FieldType.Int, "MDQuoteType");
        public static readonly FieldSpec LastSwapPoints = new FieldSpec(FieldType.Float, "LastSwapPoints");
        public static readonly FieldSpec SideGrossTradeAmt = new FieldSpec(FieldType.Float, "SideGrossTradeAmt");
        public static readonly FieldSpec LegLastForwardPoints = new FieldSpec(FieldType.Float, "LegLastForwardPoints");
        public static readonly FieldSpec LegCalculatedCcyLastQty = new FieldSpec(FieldType.Float, "LegCalculatedCcyLastQty");
        public static readonly FieldSpec LegGrossTradeAmt = new FieldSpec(FieldType.Float, "LegGrossTradeAmt");
        public static readonly FieldSpec MaturityTime = new FieldSpec(FieldType.HashedSlice16, "MaturityTime");
        public static readonly FieldSpec RefOrderID = new FieldSpec(FieldType.HashedSlice16, "RefOrderID");
        public static readonly FieldSpec RefOrderIDSource = new FieldSpec(FieldType.Char, "RefOrderIDSource");
        public static readonly FieldSpec SecondaryDisplayQty = new FieldSpec(FieldType.Float, "SecondaryDisplayQty");
        public static readonly FieldSpec DisplayWhen = new FieldSpec(FieldType.Char, "DisplayWhen");
        public static readonly FieldSpec DisplayMethod = new FieldSpec(FieldType.Char, "DisplayMethod");
        public static readonly FieldSpec DisplayLowQty = new FieldSpec(FieldType.Float, "DisplayLowQty");
        public static readonly FieldSpec DisplayHighQty = new FieldSpec(FieldType.Float, "DisplayHighQty");
        public static readonly FieldSpec DisplayMinIncr = new FieldSpec(FieldType.Float, "DisplayMinIncr");
        public static readonly FieldSpec RefreshQty = new FieldSpec(FieldType.Float, "RefreshQty");
        public static readonly FieldSpec MatchIncrement = new FieldSpec(FieldType.Float, "MatchIncrement");
        public static readonly FieldSpec MaxPriceLevels = new FieldSpec(FieldType.Int, "MaxPriceLevels");
        public static readonly FieldSpec PreTradeAnonymity = new FieldSpec(FieldType.Char, "PreTradeAnonymity");
        public static readonly FieldSpec PriceProtectionScope = new FieldSpec(FieldType.Char, "PriceProtectionScope");
        public static readonly FieldSpec LotType = new FieldSpec(FieldType.Char, "LotType");
        public static readonly FieldSpec PegPriceType = new FieldSpec(FieldType.Int, "PegPriceType");
        public static readonly FieldSpec PeggedRefPrice = new FieldSpec(FieldType.Float, "PeggedRefPrice");
        public static readonly FieldSpec PegSecurityIDSource = new FieldSpec(FieldType.HashedSlice16, "PegSecurityIDSource");
        public static readonly FieldSpec PegSecurityID = new FieldSpec(FieldType.HashedSlice16, "PegSecurityID");
        public static readonly FieldSpec PegSymbol = new FieldSpec(FieldType.HashedSlice16, "PegSymbol");
        public static readonly FieldSpec PegSecurityDesc = new FieldSpec(FieldType.HashedSlice16, "PegSecurityDesc");
        public static readonly FieldSpec OrderCategory = new FieldSpec(FieldType.Char, "OrderCategory");
        public static readonly FieldSpec NoRootPartyIDs = new FieldSpec(FieldType.Int, "NoRootPartyIDs");
        public static readonly FieldSpec RootPartyID = new FieldSpec(FieldType.HashedSlice16, "RootPartyID");
        public static readonly FieldSpec RootPartyIDSource = new FieldSpec(FieldType.Char, "RootPartyIDSource");
        public static readonly FieldSpec RootPartyRole = new FieldSpec(FieldType.Int, "RootPartyRole");
        public static readonly FieldSpec NoRootPartySubIDs = new FieldSpec(FieldType.Int, "NoRootPartySubIDs");
        public static readonly FieldSpec RootPartySubID = new FieldSpec(FieldType.HashedSlice16, "RootPartySubID");
        public static readonly FieldSpec RootPartySubIDType = new FieldSpec(FieldType.Int, "RootPartySubIDType");
        public static readonly FieldSpec TradeHandlingInstr = new FieldSpec(FieldType.Char, "TradeHandlingInstr");
        public static readonly FieldSpec OrigTradeHandlingInstr = new FieldSpec(FieldType.Char, "OrigTradeHandlingInstr");
        public static readonly FieldSpec OrigTradeDate = new FieldSpec(FieldType.HashedSlice16, "OrigTradeDate");
        public static readonly FieldSpec OrigTradeID = new FieldSpec(FieldType.HashedSlice16, "OrigTradeID");
        public static readonly FieldSpec OrigSecondaryTradeID = new FieldSpec(FieldType.HashedSlice16, "OrigSecondaryTradeID");
        public static readonly FieldSpec ApplVerID = new FieldSpec(FieldType.HashedSlice16, "ApplVerID");
        public static readonly FieldSpec CstmApplVerID = new FieldSpec(FieldType.HashedSlice16, "CstmApplVerID");
        public static readonly FieldSpec RefApplVerID = new FieldSpec(FieldType.HashedSlice16, "RefApplVerID");
        public static readonly FieldSpec RefCstmApplVerID = new FieldSpec(FieldType.HashedSlice16, "RefCstmApplVerID");
        public static readonly FieldSpec TZTransactTime = new FieldSpec(FieldType.HashedSlice16, "TZTransactTime");
        public static readonly FieldSpec ExDestinationIDSource = new FieldSpec(FieldType.Char, "ExDestinationIDSource");
        public static readonly FieldSpec ReportedPxDiff = new FieldSpec(FieldType.Char, "ReportedPxDiff");
        public static readonly FieldSpec RptSys = new FieldSpec(FieldType.HashedSlice16, "RptSys");
        public static readonly FieldSpec AllocClearingFeeIndicator = new FieldSpec(FieldType.HashedSlice16, "AllocClearingFeeIndicator");
        public static readonly FieldSpec DefaultApplVerID = new FieldSpec(FieldType.HashedSlice16, "DefaultApplVerID");
        public static readonly FieldSpec DisplayQty = new FieldSpec(FieldType.Float, "DisplayQty");
        public static readonly FieldSpec ExchangeSpecialInstructions = new FieldSpec(FieldType.HashedSlice16, "ExchangeSpecialInstructions");
        public static readonly FieldSpec NoUsernames = new FieldSpec(FieldType.Int, "NoUsernames");
        private static FieldSpec[] fieldSpecs = new FieldSpec[2048];
        static FIXTags()
        {
            fieldSpecs[1] = Account;
            fieldSpecs[2] = AdvId;
            fieldSpecs[3] = AdvRefID;
            fieldSpecs[4] = AdvSide;
            fieldSpecs[5] = AdvTransType;
            fieldSpecs[6] = AvgPx;
            fieldSpecs[7] = BeginSeqNo;
            fieldSpecs[8] = BeginString;
            fieldSpecs[9] = BodyLength;
            fieldSpecs[10] = CheckSum;
            fieldSpecs[11] = ClOrdID;
            fieldSpecs[12] = Commission;
            fieldSpecs[13] = CommType;
            fieldSpecs[14] = CumQty;
            fieldSpecs[15] = Currency;
            fieldSpecs[16] = EndSeqNo;
            fieldSpecs[17] = ExecID;
            fieldSpecs[18] = ExecInst;
            fieldSpecs[19] = ExecRefID;
            fieldSpecs[21] = HandlInst;
            fieldSpecs[22] = SecurityIDSource;
            fieldSpecs[23] = IOIID;
            fieldSpecs[25] = IOIQltyInd;
            fieldSpecs[26] = IOIRefID;
            fieldSpecs[27] = IOIQty;
            fieldSpecs[28] = IOITransType;
            fieldSpecs[29] = LastCapacity;
            fieldSpecs[30] = LastMkt;
            fieldSpecs[31] = LastPx;
            fieldSpecs[32] = LastQty;
            fieldSpecs[33] = NoLinesOfText;
            fieldSpecs[34] = MsgSeqNum;
            fieldSpecs[35] = MsgType;
            fieldSpecs[36] = NewSeqNo;
            fieldSpecs[37] = OrderID;
            fieldSpecs[38] = OrderQty;
            fieldSpecs[39] = OrdStatus;
            fieldSpecs[40] = OrdType;
            fieldSpecs[41] = OrigClOrdID;
            fieldSpecs[42] = OrigTime;
            fieldSpecs[43] = PossDupFlag;
            fieldSpecs[44] = Price;
            fieldSpecs[45] = RefSeqNum;
            fieldSpecs[48] = SecurityID;
            fieldSpecs[49] = SenderCompID;
            fieldSpecs[50] = SenderSubID;
            fieldSpecs[52] = SendingTime;
            fieldSpecs[53] = Quantity;
            fieldSpecs[54] = Side;
            fieldSpecs[55] = Symbol;
            fieldSpecs[56] = TargetCompID;
            fieldSpecs[57] = TargetSubID;
            fieldSpecs[58] = Text;
            fieldSpecs[59] = TimeInForce;
            fieldSpecs[60] = TransactTime;
            fieldSpecs[61] = Urgency;
            fieldSpecs[62] = ValidUntilTime;
            fieldSpecs[63] = SettlType;
            fieldSpecs[64] = SettlDate;
            fieldSpecs[65] = SymbolSfx;
            fieldSpecs[66] = ListID;
            fieldSpecs[67] = ListSeqNo;
            fieldSpecs[68] = TotNoOrders;
            fieldSpecs[69] = ListExecInst;
            fieldSpecs[70] = AllocID;
            fieldSpecs[71] = AllocTransType;
            fieldSpecs[72] = RefAllocID;
            fieldSpecs[73] = NoOrders;
            fieldSpecs[74] = AvgPxPrecision;
            fieldSpecs[75] = TradeDate;
            fieldSpecs[77] = PositionEffect;
            fieldSpecs[78] = NoAllocs;
            fieldSpecs[79] = AllocAccount;
            fieldSpecs[80] = AllocQty;
            fieldSpecs[81] = ProcessCode;
            fieldSpecs[82] = NoRpts;
            fieldSpecs[83] = RptSeq;
            fieldSpecs[84] = CxlQty;
            fieldSpecs[85] = NoDlvyInst;
            fieldSpecs[87] = AllocStatus;
            fieldSpecs[88] = AllocRejCode;
            fieldSpecs[89] = Signature;
            fieldSpecs[90] = SecureDataLen;
            fieldSpecs[91] = SecureData;
            fieldSpecs[93] = SignatureLength;
            fieldSpecs[94] = EmailType;
            fieldSpecs[95] = RawDataLength;
            fieldSpecs[96] = RawData;
            fieldSpecs[97] = PossResend;
            fieldSpecs[98] = EncryptMethod;
            fieldSpecs[99] = StopPx;
            fieldSpecs[100] = ExDestination;
            fieldSpecs[102] = CxlRejReason;
            fieldSpecs[103] = OrdRejReason;
            fieldSpecs[104] = IOIQualifier;
            fieldSpecs[106] = Issuer;
            fieldSpecs[107] = SecurityDesc;
            fieldSpecs[108] = HeartBtInt;
            fieldSpecs[110] = MinQty;
            fieldSpecs[111] = MaxFloor;
            fieldSpecs[112] = TestReqID;
            fieldSpecs[113] = ReportToExch;
            fieldSpecs[114] = LocateReqd;
            fieldSpecs[115] = OnBehalfOfCompID;
            fieldSpecs[116] = OnBehalfOfSubID;
            fieldSpecs[117] = QuoteID;
            fieldSpecs[118] = NetMoney;
            fieldSpecs[119] = SettlCurrAmt;
            fieldSpecs[120] = SettlCurrency;
            fieldSpecs[121] = ForexReq;
            fieldSpecs[122] = OrigSendingTime;
            fieldSpecs[123] = GapFillFlag;
            fieldSpecs[124] = NoExecs;
            fieldSpecs[126] = ExpireTime;
            fieldSpecs[127] = DKReason;
            fieldSpecs[128] = DeliverToCompID;
            fieldSpecs[129] = DeliverToSubID;
            fieldSpecs[130] = IOINaturalFlag;
            fieldSpecs[131] = QuoteReqID;
            fieldSpecs[132] = BidPx;
            fieldSpecs[133] = OfferPx;
            fieldSpecs[134] = BidSize;
            fieldSpecs[135] = OfferSize;
            fieldSpecs[136] = NoMiscFees;
            fieldSpecs[137] = MiscFeeAmt;
            fieldSpecs[138] = MiscFeeCurr;
            fieldSpecs[139] = MiscFeeType;
            fieldSpecs[140] = PrevClosePx;
            fieldSpecs[141] = ResetSeqNumFlag;
            fieldSpecs[142] = SenderLocationID;
            fieldSpecs[143] = TargetLocationID;
            fieldSpecs[144] = OnBehalfOfLocationID;
            fieldSpecs[145] = DeliverToLocationID;
            fieldSpecs[146] = NoRelatedSym;
            fieldSpecs[147] = Subject;
            fieldSpecs[148] = Headline;
            fieldSpecs[149] = URLLink;
            fieldSpecs[150] = ExecType;
            fieldSpecs[151] = LeavesQty;
            fieldSpecs[152] = CashOrderQty;
            fieldSpecs[153] = AllocAvgPx;
            fieldSpecs[154] = AllocNetMoney;
            fieldSpecs[155] = SettlCurrFxRate;
            fieldSpecs[156] = SettlCurrFxRateCalc;
            fieldSpecs[157] = NumDaysInterest;
            fieldSpecs[158] = AccruedInterestRate;
            fieldSpecs[159] = AccruedInterestAmt;
            fieldSpecs[160] = SettlInstMode;
            fieldSpecs[161] = AllocText;
            fieldSpecs[162] = SettlInstID;
            fieldSpecs[163] = SettlInstTransType;
            fieldSpecs[164] = EmailThreadID;
            fieldSpecs[165] = SettlInstSource;
            fieldSpecs[167] = SecurityType;
            fieldSpecs[168] = EffectiveTime;
            fieldSpecs[169] = StandInstDbType;
            fieldSpecs[170] = StandInstDbName;
            fieldSpecs[171] = StandInstDbID;
            fieldSpecs[172] = SettlDeliveryType;
            fieldSpecs[188] = BidSpotRate;
            fieldSpecs[189] = BidForwardPoints;
            fieldSpecs[190] = OfferSpotRate;
            fieldSpecs[191] = OfferForwardPoints;
            fieldSpecs[192] = OrderQty2;
            fieldSpecs[193] = SettlDate2;
            fieldSpecs[194] = LastSpotRate;
            fieldSpecs[195] = LastForwardPoints;
            fieldSpecs[196] = AllocLinkID;
            fieldSpecs[197] = AllocLinkType;
            fieldSpecs[198] = SecondaryOrderID;
            fieldSpecs[199] = NoIOIQualifiers;
            fieldSpecs[200] = MaturityMonthYear;
            fieldSpecs[201] = PutOrCall;
            fieldSpecs[202] = StrikePrice;
            fieldSpecs[203] = CoveredOrUncovered;
            fieldSpecs[206] = OptAttribute;
            fieldSpecs[207] = SecurityExchange;
            fieldSpecs[208] = NotifyBrokerOfCredit;
            fieldSpecs[209] = AllocHandlInst;
            fieldSpecs[210] = MaxShow;
            fieldSpecs[211] = PegOffsetValue;
            fieldSpecs[212] = XmlDataLen;
            fieldSpecs[213] = XmlData;
            fieldSpecs[214] = SettlInstRefID;
            fieldSpecs[215] = NoRoutingIDs;
            fieldSpecs[216] = RoutingType;
            fieldSpecs[217] = RoutingID;
            fieldSpecs[218] = Spread;
            fieldSpecs[220] = BenchmarkCurveCurrency;
            fieldSpecs[221] = BenchmarkCurveName;
            fieldSpecs[222] = BenchmarkCurvePoint;
            fieldSpecs[223] = CouponRate;
            fieldSpecs[224] = CouponPaymentDate;
            fieldSpecs[225] = IssueDate;
            fieldSpecs[226] = RepurchaseTerm;
            fieldSpecs[227] = RepurchaseRate;
            fieldSpecs[228] = Factor;
            fieldSpecs[229] = TradeOriginationDate;
            fieldSpecs[230] = ExDate;
            fieldSpecs[231] = ContractMultiplier;
            fieldSpecs[232] = NoStipulations;
            fieldSpecs[233] = StipulationType;
            fieldSpecs[234] = StipulationValue;
            fieldSpecs[235] = YieldType;
            fieldSpecs[236] = Yield;
            fieldSpecs[237] = TotalTakedown;
            fieldSpecs[238] = Concession;
            fieldSpecs[239] = RepoCollateralSecurityType;
            fieldSpecs[240] = RedemptionDate;
            fieldSpecs[241] = UnderlyingCouponPaymentDate;
            fieldSpecs[242] = UnderlyingIssueDate;
            fieldSpecs[243] = UnderlyingRepoCollateralSecurityType;
            fieldSpecs[244] = UnderlyingRepurchaseTerm;
            fieldSpecs[245] = UnderlyingRepurchaseRate;
            fieldSpecs[246] = UnderlyingFactor;
            fieldSpecs[247] = UnderlyingRedemptionDate;
            fieldSpecs[248] = LegCouponPaymentDate;
            fieldSpecs[249] = LegIssueDate;
            fieldSpecs[250] = LegRepoCollateralSecurityType;
            fieldSpecs[251] = LegRepurchaseTerm;
            fieldSpecs[252] = LegRepurchaseRate;
            fieldSpecs[253] = LegFactor;
            fieldSpecs[254] = LegRedemptionDate;
            fieldSpecs[255] = CreditRating;
            fieldSpecs[256] = UnderlyingCreditRating;
            fieldSpecs[257] = LegCreditRating;
            fieldSpecs[258] = TradedFlatSwitch;
            fieldSpecs[259] = BasisFeatureDate;
            fieldSpecs[260] = BasisFeaturePrice;
            fieldSpecs[262] = MDReqID;
            fieldSpecs[263] = SubscriptionRequestType;
            fieldSpecs[264] = MarketDepth;
            fieldSpecs[265] = MDUpdateType;
            fieldSpecs[266] = AggregatedBook;
            fieldSpecs[267] = NoMDEntryTypes;
            fieldSpecs[268] = NoMDEntries;
            fieldSpecs[269] = MDEntryType;
            fieldSpecs[270] = MDEntryPx;
            fieldSpecs[271] = MDEntrySize;
            fieldSpecs[272] = MDEntryDate;
            fieldSpecs[273] = MDEntryTime;
            fieldSpecs[274] = TickDirection;
            fieldSpecs[275] = MDMkt;
            fieldSpecs[276] = QuoteCondition;
            fieldSpecs[277] = TradeCondition;
            fieldSpecs[278] = MDEntryID;
            fieldSpecs[279] = MDUpdateAction;
            fieldSpecs[280] = MDEntryRefID;
            fieldSpecs[281] = MDReqRejReason;
            fieldSpecs[282] = MDEntryOriginator;
            fieldSpecs[283] = LocationID;
            fieldSpecs[284] = DeskID;
            fieldSpecs[285] = DeleteReason;
            fieldSpecs[286] = OpenCloseSettlFlag;
            fieldSpecs[287] = SellerDays;
            fieldSpecs[288] = MDEntryBuyer;
            fieldSpecs[289] = MDEntrySeller;
            fieldSpecs[290] = MDEntryPositionNo;
            fieldSpecs[291] = FinancialStatus;
            fieldSpecs[292] = CorporateAction;
            fieldSpecs[293] = DefBidSize;
            fieldSpecs[294] = DefOfferSize;
            fieldSpecs[295] = NoQuoteEntries;
            fieldSpecs[296] = NoQuoteSets;
            fieldSpecs[297] = QuoteStatus;
            fieldSpecs[298] = QuoteCancelType;
            fieldSpecs[299] = QuoteEntryID;
            fieldSpecs[300] = QuoteRejectReason;
            fieldSpecs[301] = QuoteResponseLevel;
            fieldSpecs[302] = QuoteSetID;
            fieldSpecs[303] = QuoteRequestType;
            fieldSpecs[304] = TotNoQuoteEntries;
            fieldSpecs[305] = UnderlyingSecurityIDSource;
            fieldSpecs[306] = UnderlyingIssuer;
            fieldSpecs[307] = UnderlyingSecurityDesc;
            fieldSpecs[308] = UnderlyingSecurityExchange;
            fieldSpecs[309] = UnderlyingSecurityID;
            fieldSpecs[310] = UnderlyingSecurityType;
            fieldSpecs[311] = UnderlyingSymbol;
            fieldSpecs[312] = UnderlyingSymbolSfx;
            fieldSpecs[313] = UnderlyingMaturityMonthYear;
            fieldSpecs[315] = UnderlyingPutOrCall;
            fieldSpecs[316] = UnderlyingStrikePrice;
            fieldSpecs[317] = UnderlyingOptAttribute;
            fieldSpecs[318] = UnderlyingCurrency;
            fieldSpecs[320] = SecurityReqID;
            fieldSpecs[321] = SecurityRequestType;
            fieldSpecs[322] = SecurityResponseID;
            fieldSpecs[323] = SecurityResponseType;
            fieldSpecs[324] = SecurityStatusReqID;
            fieldSpecs[325] = UnsolicitedIndicator;
            fieldSpecs[326] = SecurityTradingStatus;
            fieldSpecs[327] = HaltReason;
            fieldSpecs[328] = InViewOfCommon;
            fieldSpecs[329] = DueToRelated;
            fieldSpecs[330] = BuyVolume;
            fieldSpecs[331] = SellVolume;
            fieldSpecs[332] = HighPx;
            fieldSpecs[333] = LowPx;
            fieldSpecs[334] = Adjustment;
            fieldSpecs[335] = TradSesReqID;
            fieldSpecs[336] = TradingSessionID;
            fieldSpecs[337] = ContraTrader;
            fieldSpecs[338] = TradSesMethod;
            fieldSpecs[339] = TradSesMode;
            fieldSpecs[340] = TradSesStatus;
            fieldSpecs[341] = TradSesStartTime;
            fieldSpecs[342] = TradSesOpenTime;
            fieldSpecs[343] = TradSesPreCloseTime;
            fieldSpecs[344] = TradSesCloseTime;
            fieldSpecs[345] = TradSesEndTime;
            fieldSpecs[346] = NumberOfOrders;
            fieldSpecs[347] = MessageEncoding;
            fieldSpecs[348] = EncodedIssuerLen;
            fieldSpecs[349] = EncodedIssuer;
            fieldSpecs[350] = EncodedSecurityDescLen;
            fieldSpecs[351] = EncodedSecurityDesc;
            fieldSpecs[352] = EncodedListExecInstLen;
            fieldSpecs[353] = EncodedListExecInst;
            fieldSpecs[354] = EncodedTextLen;
            fieldSpecs[355] = EncodedText;
            fieldSpecs[356] = EncodedSubjectLen;
            fieldSpecs[357] = EncodedSubject;
            fieldSpecs[358] = EncodedHeadlineLen;
            fieldSpecs[359] = EncodedHeadline;
            fieldSpecs[360] = EncodedAllocTextLen;
            fieldSpecs[361] = EncodedAllocText;
            fieldSpecs[362] = EncodedUnderlyingIssuerLen;
            fieldSpecs[363] = EncodedUnderlyingIssuer;
            fieldSpecs[364] = EncodedUnderlyingSecurityDescLen;
            fieldSpecs[365] = EncodedUnderlyingSecurityDesc;
            fieldSpecs[366] = AllocPrice;
            fieldSpecs[367] = QuoteSetValidUntilTime;
            fieldSpecs[368] = QuoteEntryRejectReason;
            fieldSpecs[369] = LastMsgSeqNumProcessed;
            fieldSpecs[371] = RefTagID;
            fieldSpecs[372] = RefMsgType;
            fieldSpecs[373] = SessionRejectReason;
            fieldSpecs[374] = BidRequestTransType;
            fieldSpecs[375] = ContraBroker;
            fieldSpecs[376] = ComplianceID;
            fieldSpecs[377] = SolicitedFlag;
            fieldSpecs[378] = ExecRestatementReason;
            fieldSpecs[379] = BusinessRejectRefID;
            fieldSpecs[380] = BusinessRejectReason;
            fieldSpecs[381] = GrossTradeAmt;
            fieldSpecs[382] = NoContraBrokers;
            fieldSpecs[383] = MaxMessageSize;
            fieldSpecs[384] = NoMsgTypes;
            fieldSpecs[385] = MsgDirection;
            fieldSpecs[386] = NoTradingSessions;
            fieldSpecs[387] = TotalVolumeTraded;
            fieldSpecs[388] = DiscretionInst;
            fieldSpecs[389] = DiscretionOffsetValue;
            fieldSpecs[390] = BidID;
            fieldSpecs[391] = ClientBidID;
            fieldSpecs[392] = ListName;
            fieldSpecs[393] = TotNoRelatedSym;
            fieldSpecs[394] = BidType;
            fieldSpecs[395] = NumTickets;
            fieldSpecs[396] = SideValue1;
            fieldSpecs[397] = SideValue2;
            fieldSpecs[398] = NoBidDescriptors;
            fieldSpecs[399] = BidDescriptorType;
            fieldSpecs[400] = BidDescriptor;
            fieldSpecs[401] = SideValueInd;
            fieldSpecs[402] = LiquidityPctLow;
            fieldSpecs[403] = LiquidityPctHigh;
            fieldSpecs[404] = LiquidityValue;
            fieldSpecs[405] = EFPTrackingError;
            fieldSpecs[406] = FairValue;
            fieldSpecs[407] = OutsideIndexPct;
            fieldSpecs[408] = ValueOfFutures;
            fieldSpecs[409] = LiquidityIndType;
            fieldSpecs[410] = WtAverageLiquidity;
            fieldSpecs[411] = ExchangeForPhysical;
            fieldSpecs[412] = OutMainCntryUIndex;
            fieldSpecs[413] = CrossPercent;
            fieldSpecs[414] = ProgRptReqs;
            fieldSpecs[415] = ProgPeriodInterval;
            fieldSpecs[416] = IncTaxInd;
            fieldSpecs[417] = NumBidders;
            fieldSpecs[418] = BidTradeType;
            fieldSpecs[419] = BasisPxType;
            fieldSpecs[420] = NoBidComponents;
            fieldSpecs[421] = Country;
            fieldSpecs[422] = TotNoStrikes;
            fieldSpecs[423] = PriceType;
            fieldSpecs[424] = DayOrderQty;
            fieldSpecs[425] = DayCumQty;
            fieldSpecs[426] = DayAvgPx;
            fieldSpecs[427] = GTBookingInst;
            fieldSpecs[428] = NoStrikes;
            fieldSpecs[429] = ListStatusType;
            fieldSpecs[430] = NetGrossInd;
            fieldSpecs[431] = ListOrderStatus;
            fieldSpecs[432] = ExpireDate;
            fieldSpecs[433] = ListExecInstType;
            fieldSpecs[434] = CxlRejResponseTo;
            fieldSpecs[435] = UnderlyingCouponRate;
            fieldSpecs[436] = UnderlyingContractMultiplier;
            fieldSpecs[437] = ContraTradeQty;
            fieldSpecs[438] = ContraTradeTime;
            fieldSpecs[441] = LiquidityNumSecurities;
            fieldSpecs[442] = MultiLegReportingType;
            fieldSpecs[443] = StrikeTime;
            fieldSpecs[444] = ListStatusText;
            fieldSpecs[445] = EncodedListStatusTextLen;
            fieldSpecs[446] = EncodedListStatusText;
            fieldSpecs[447] = PartyIDSource;
            fieldSpecs[448] = PartyID;
            fieldSpecs[451] = NetChgPrevDay;
            fieldSpecs[452] = PartyRole;
            fieldSpecs[453] = NoPartyIDs;
            fieldSpecs[454] = NoSecurityAltID;
            fieldSpecs[455] = SecurityAltID;
            fieldSpecs[456] = SecurityAltIDSource;
            fieldSpecs[457] = NoUnderlyingSecurityAltID;
            fieldSpecs[458] = UnderlyingSecurityAltID;
            fieldSpecs[459] = UnderlyingSecurityAltIDSource;
            fieldSpecs[460] = Product;
            fieldSpecs[461] = CFICode;
            fieldSpecs[462] = UnderlyingProduct;
            fieldSpecs[463] = UnderlyingCFICode;
            fieldSpecs[464] = TestMessageIndicator;
            fieldSpecs[466] = BookingRefID;
            fieldSpecs[467] = IndividualAllocID;
            fieldSpecs[468] = RoundingDirection;
            fieldSpecs[469] = RoundingModulus;
            fieldSpecs[470] = CountryOfIssue;
            fieldSpecs[471] = StateOrProvinceOfIssue;
            fieldSpecs[472] = LocaleOfIssue;
            fieldSpecs[473] = NoRegistDtls;
            fieldSpecs[474] = MailingDtls;
            fieldSpecs[475] = InvestorCountryOfResidence;
            fieldSpecs[476] = PaymentRef;
            fieldSpecs[477] = DistribPaymentMethod;
            fieldSpecs[478] = CashDistribCurr;
            fieldSpecs[479] = CommCurrency;
            fieldSpecs[480] = CancellationRights;
            fieldSpecs[481] = MoneyLaunderingStatus;
            fieldSpecs[482] = MailingInst;
            fieldSpecs[483] = TransBkdTime;
            fieldSpecs[484] = ExecPriceType;
            fieldSpecs[485] = ExecPriceAdjustment;
            fieldSpecs[486] = DateOfBirth;
            fieldSpecs[487] = TradeReportTransType;
            fieldSpecs[488] = CardHolderName;
            fieldSpecs[489] = CardNumber;
            fieldSpecs[490] = CardExpDate;
            fieldSpecs[491] = CardIssNum;
            fieldSpecs[492] = PaymentMethod;
            fieldSpecs[493] = RegistAcctType;
            fieldSpecs[494] = Designation;
            fieldSpecs[495] = TaxAdvantageType;
            fieldSpecs[496] = RegistRejReasonText;
            fieldSpecs[497] = FundRenewWaiv;
            fieldSpecs[498] = CashDistribAgentName;
            fieldSpecs[499] = CashDistribAgentCode;
            fieldSpecs[500] = CashDistribAgentAcctNumber;
            fieldSpecs[501] = CashDistribPayRef;
            fieldSpecs[502] = CashDistribAgentAcctName;
            fieldSpecs[503] = CardStartDate;
            fieldSpecs[504] = PaymentDate;
            fieldSpecs[505] = PaymentRemitterID;
            fieldSpecs[506] = RegistStatus;
            fieldSpecs[507] = RegistRejReasonCode;
            fieldSpecs[508] = RegistRefID;
            fieldSpecs[509] = RegistDtls;
            fieldSpecs[510] = NoDistribInsts;
            fieldSpecs[511] = RegistEmail;
            fieldSpecs[512] = DistribPercentage;
            fieldSpecs[513] = RegistID;
            fieldSpecs[514] = RegistTransType;
            fieldSpecs[515] = ExecValuationPoint;
            fieldSpecs[516] = OrderPercent;
            fieldSpecs[517] = OwnershipType;
            fieldSpecs[518] = NoContAmts;
            fieldSpecs[519] = ContAmtType;
            fieldSpecs[520] = ContAmtValue;
            fieldSpecs[521] = ContAmtCurr;
            fieldSpecs[522] = OwnerType;
            fieldSpecs[523] = PartySubID;
            fieldSpecs[524] = NestedPartyID;
            fieldSpecs[525] = NestedPartyIDSource;
            fieldSpecs[526] = SecondaryClOrdID;
            fieldSpecs[527] = SecondaryExecID;
            fieldSpecs[528] = OrderCapacity;
            fieldSpecs[529] = OrderRestrictions;
            fieldSpecs[530] = MassCancelRequestType;
            fieldSpecs[531] = MassCancelResponse;
            fieldSpecs[532] = MassCancelRejectReason;
            fieldSpecs[533] = TotalAffectedOrders;
            fieldSpecs[534] = NoAffectedOrders;
            fieldSpecs[535] = AffectedOrderID;
            fieldSpecs[536] = AffectedSecondaryOrderID;
            fieldSpecs[537] = QuoteType;
            fieldSpecs[538] = NestedPartyRole;
            fieldSpecs[539] = NoNestedPartyIDs;
            fieldSpecs[540] = TotalAccruedInterestAmt;
            fieldSpecs[541] = MaturityDate;
            fieldSpecs[542] = UnderlyingMaturityDate;
            fieldSpecs[543] = InstrRegistry;
            fieldSpecs[544] = CashMargin;
            fieldSpecs[545] = NestedPartySubID;
            fieldSpecs[546] = Scope;
            fieldSpecs[547] = MDImplicitDelete;
            fieldSpecs[548] = CrossID;
            fieldSpecs[549] = CrossType;
            fieldSpecs[550] = CrossPrioritization;
            fieldSpecs[551] = OrigCrossID;
            fieldSpecs[552] = NoSides;
            fieldSpecs[553] = Username;
            fieldSpecs[554] = Password;
            fieldSpecs[555] = NoLegs;
            fieldSpecs[556] = LegCurrency;
            fieldSpecs[557] = TotNoSecurityTypes;
            fieldSpecs[558] = NoSecurityTypes;
            fieldSpecs[559] = SecurityListRequestType;
            fieldSpecs[560] = SecurityRequestResult;
            fieldSpecs[561] = RoundLot;
            fieldSpecs[562] = MinTradeVol;
            fieldSpecs[563] = MultiLegRptTypeReq;
            fieldSpecs[564] = LegPositionEffect;
            fieldSpecs[565] = LegCoveredOrUncovered;
            fieldSpecs[566] = LegPrice;
            fieldSpecs[567] = TradSesStatusRejReason;
            fieldSpecs[568] = TradeRequestID;
            fieldSpecs[569] = TradeRequestType;
            fieldSpecs[570] = PreviouslyReported;
            fieldSpecs[571] = TradeReportID;
            fieldSpecs[572] = TradeReportRefID;
            fieldSpecs[573] = MatchStatus;
            fieldSpecs[574] = MatchType;
            fieldSpecs[575] = OddLot;
            fieldSpecs[576] = NoClearingInstructions;
            fieldSpecs[577] = ClearingInstruction;
            fieldSpecs[578] = TradeInputSource;
            fieldSpecs[579] = TradeInputDevice;
            fieldSpecs[580] = NoDates;
            fieldSpecs[581] = AccountType;
            fieldSpecs[582] = CustOrderCapacity;
            fieldSpecs[583] = ClOrdLinkID;
            fieldSpecs[584] = MassStatusReqID;
            fieldSpecs[585] = MassStatusReqType;
            fieldSpecs[586] = OrigOrdModTime;
            fieldSpecs[587] = LegSettlType;
            fieldSpecs[588] = LegSettlDate;
            fieldSpecs[589] = DayBookingInst;
            fieldSpecs[590] = BookingUnit;
            fieldSpecs[591] = PreallocMethod;
            fieldSpecs[592] = UnderlyingCountryOfIssue;
            fieldSpecs[593] = UnderlyingStateOrProvinceOfIssue;
            fieldSpecs[594] = UnderlyingLocaleOfIssue;
            fieldSpecs[595] = UnderlyingInstrRegistry;
            fieldSpecs[596] = LegCountryOfIssue;
            fieldSpecs[597] = LegStateOrProvinceOfIssue;
            fieldSpecs[598] = LegLocaleOfIssue;
            fieldSpecs[599] = LegInstrRegistry;
            fieldSpecs[600] = LegSymbol;
            fieldSpecs[601] = LegSymbolSfx;
            fieldSpecs[602] = LegSecurityID;
            fieldSpecs[603] = LegSecurityIDSource;
            fieldSpecs[604] = NoLegSecurityAltID;
            fieldSpecs[605] = LegSecurityAltID;
            fieldSpecs[606] = LegSecurityAltIDSource;
            fieldSpecs[607] = LegProduct;
            fieldSpecs[608] = LegCFICode;
            fieldSpecs[609] = LegSecurityType;
            fieldSpecs[610] = LegMaturityMonthYear;
            fieldSpecs[611] = LegMaturityDate;
            fieldSpecs[612] = LegStrikePrice;
            fieldSpecs[613] = LegOptAttribute;
            fieldSpecs[614] = LegContractMultiplier;
            fieldSpecs[615] = LegCouponRate;
            fieldSpecs[616] = LegSecurityExchange;
            fieldSpecs[617] = LegIssuer;
            fieldSpecs[618] = EncodedLegIssuerLen;
            fieldSpecs[619] = EncodedLegIssuer;
            fieldSpecs[620] = LegSecurityDesc;
            fieldSpecs[621] = EncodedLegSecurityDescLen;
            fieldSpecs[622] = EncodedLegSecurityDesc;
            fieldSpecs[623] = LegRatioQty;
            fieldSpecs[624] = LegSide;
            fieldSpecs[625] = TradingSessionSubID;
            fieldSpecs[626] = AllocType;
            fieldSpecs[627] = NoHops;
            fieldSpecs[628] = HopCompID;
            fieldSpecs[629] = HopSendingTime;
            fieldSpecs[630] = HopRefID;
            fieldSpecs[631] = MidPx;
            fieldSpecs[632] = BidYield;
            fieldSpecs[633] = MidYield;
            fieldSpecs[634] = OfferYield;
            fieldSpecs[635] = ClearingFeeIndicator;
            fieldSpecs[636] = WorkingIndicator;
            fieldSpecs[637] = LegLastPx;
            fieldSpecs[638] = PriorityIndicator;
            fieldSpecs[639] = PriceImprovement;
            fieldSpecs[640] = Price2;
            fieldSpecs[641] = LastForwardPoints2;
            fieldSpecs[642] = BidForwardPoints2;
            fieldSpecs[643] = OfferForwardPoints2;
            fieldSpecs[644] = RFQReqID;
            fieldSpecs[645] = MktBidPx;
            fieldSpecs[646] = MktOfferPx;
            fieldSpecs[647] = MinBidSize;
            fieldSpecs[648] = MinOfferSize;
            fieldSpecs[649] = QuoteStatusReqID;
            fieldSpecs[650] = LegalConfirm;
            fieldSpecs[651] = UnderlyingLastPx;
            fieldSpecs[652] = UnderlyingLastQty;
            fieldSpecs[654] = LegRefID;
            fieldSpecs[655] = ContraLegRefID;
            fieldSpecs[656] = SettlCurrBidFxRate;
            fieldSpecs[657] = SettlCurrOfferFxRate;
            fieldSpecs[658] = QuoteRequestRejectReason;
            fieldSpecs[659] = SideComplianceID;
            fieldSpecs[660] = AcctIDSource;
            fieldSpecs[661] = AllocAcctIDSource;
            fieldSpecs[662] = BenchmarkPrice;
            fieldSpecs[663] = BenchmarkPriceType;
            fieldSpecs[664] = ConfirmID;
            fieldSpecs[665] = ConfirmStatus;
            fieldSpecs[666] = ConfirmTransType;
            fieldSpecs[667] = ContractSettlMonth;
            fieldSpecs[668] = DeliveryForm;
            fieldSpecs[669] = LastParPx;
            fieldSpecs[670] = NoLegAllocs;
            fieldSpecs[671] = LegAllocAccount;
            fieldSpecs[672] = LegIndividualAllocID;
            fieldSpecs[673] = LegAllocQty;
            fieldSpecs[674] = LegAllocAcctIDSource;
            fieldSpecs[675] = LegSettlCurrency;
            fieldSpecs[676] = LegBenchmarkCurveCurrency;
            fieldSpecs[677] = LegBenchmarkCurveName;
            fieldSpecs[678] = LegBenchmarkCurvePoint;
            fieldSpecs[679] = LegBenchmarkPrice;
            fieldSpecs[680] = LegBenchmarkPriceType;
            fieldSpecs[681] = LegBidPx;
            fieldSpecs[682] = LegIOIQty;
            fieldSpecs[683] = NoLegStipulations;
            fieldSpecs[684] = LegOfferPx;
            fieldSpecs[685] = LegOrderQty;
            fieldSpecs[686] = LegPriceType;
            fieldSpecs[687] = LegQty;
            fieldSpecs[688] = LegStipulationType;
            fieldSpecs[689] = LegStipulationValue;
            fieldSpecs[690] = LegSwapType;
            fieldSpecs[691] = Pool;
            fieldSpecs[692] = QuotePriceType;
            fieldSpecs[693] = QuoteRespID;
            fieldSpecs[694] = QuoteRespType;
            fieldSpecs[695] = QuoteQualifier;
            fieldSpecs[696] = YieldRedemptionDate;
            fieldSpecs[697] = YieldRedemptionPrice;
            fieldSpecs[698] = YieldRedemptionPriceType;
            fieldSpecs[699] = BenchmarkSecurityID;
            fieldSpecs[700] = ReversalIndicator;
            fieldSpecs[701] = YieldCalcDate;
            fieldSpecs[702] = NoPositions;
            fieldSpecs[703] = PosType;
            fieldSpecs[704] = LongQty;
            fieldSpecs[705] = ShortQty;
            fieldSpecs[706] = PosQtyStatus;
            fieldSpecs[707] = PosAmtType;
            fieldSpecs[708] = PosAmt;
            fieldSpecs[709] = PosTransType;
            fieldSpecs[710] = PosReqID;
            fieldSpecs[711] = NoUnderlyings;
            fieldSpecs[712] = PosMaintAction;
            fieldSpecs[713] = OrigPosReqRefID;
            fieldSpecs[714] = PosMaintRptRefID;
            fieldSpecs[715] = ClearingBusinessDate;
            fieldSpecs[716] = SettlSessID;
            fieldSpecs[717] = SettlSessSubID;
            fieldSpecs[718] = AdjustmentType;
            fieldSpecs[719] = ContraryInstructionIndicator;
            fieldSpecs[720] = PriorSpreadIndicator;
            fieldSpecs[721] = PosMaintRptID;
            fieldSpecs[722] = PosMaintStatus;
            fieldSpecs[723] = PosMaintResult;
            fieldSpecs[724] = PosReqType;
            fieldSpecs[725] = ResponseTransportType;
            fieldSpecs[726] = ResponseDestination;
            fieldSpecs[727] = TotalNumPosReports;
            fieldSpecs[728] = PosReqResult;
            fieldSpecs[729] = PosReqStatus;
            fieldSpecs[730] = SettlPrice;
            fieldSpecs[731] = SettlPriceType;
            fieldSpecs[732] = UnderlyingSettlPrice;
            fieldSpecs[733] = UnderlyingSettlPriceType;
            fieldSpecs[734] = PriorSettlPrice;
            fieldSpecs[735] = NoQuoteQualifiers;
            fieldSpecs[736] = AllocSettlCurrency;
            fieldSpecs[737] = AllocSettlCurrAmt;
            fieldSpecs[738] = InterestAtMaturity;
            fieldSpecs[739] = LegDatedDate;
            fieldSpecs[740] = LegPool;
            fieldSpecs[741] = AllocInterestAtMaturity;
            fieldSpecs[742] = AllocAccruedInterestAmt;
            fieldSpecs[743] = DeliveryDate;
            fieldSpecs[744] = AssignmentMethod;
            fieldSpecs[745] = AssignmentUnit;
            fieldSpecs[746] = OpenInterest;
            fieldSpecs[747] = ExerciseMethod;
            fieldSpecs[748] = TotNumTradeReports;
            fieldSpecs[749] = TradeRequestResult;
            fieldSpecs[750] = TradeRequestStatus;
            fieldSpecs[751] = TradeReportRejectReason;
            fieldSpecs[752] = SideMultiLegReportingType;
            fieldSpecs[753] = NoPosAmt;
            fieldSpecs[754] = AutoAcceptIndicator;
            fieldSpecs[755] = AllocReportID;
            fieldSpecs[756] = NoNested2PartyIDs;
            fieldSpecs[757] = Nested2PartyID;
            fieldSpecs[758] = Nested2PartyIDSource;
            fieldSpecs[759] = Nested2PartyRole;
            fieldSpecs[760] = Nested2PartySubID;
            fieldSpecs[761] = BenchmarkSecurityIDSource;
            fieldSpecs[762] = SecuritySubType;
            fieldSpecs[763] = UnderlyingSecuritySubType;
            fieldSpecs[764] = LegSecuritySubType;
            fieldSpecs[765] = AllowableOneSidednessPct;
            fieldSpecs[766] = AllowableOneSidednessValue;
            fieldSpecs[767] = AllowableOneSidednessCurr;
            fieldSpecs[768] = NoTrdRegTimestamps;
            fieldSpecs[769] = TrdRegTimestamp;
            fieldSpecs[770] = TrdRegTimestampType;
            fieldSpecs[771] = TrdRegTimestampOrigin;
            fieldSpecs[772] = ConfirmRefID;
            fieldSpecs[773] = ConfirmType;
            fieldSpecs[774] = ConfirmRejReason;
            fieldSpecs[775] = BookingType;
            fieldSpecs[776] = IndividualAllocRejCode;
            fieldSpecs[777] = SettlInstMsgID;
            fieldSpecs[778] = NoSettlInst;
            fieldSpecs[779] = LastUpdateTime;
            fieldSpecs[780] = AllocSettlInstType;
            fieldSpecs[781] = NoSettlPartyIDs;
            fieldSpecs[782] = SettlPartyID;
            fieldSpecs[783] = SettlPartyIDSource;
            fieldSpecs[784] = SettlPartyRole;
            fieldSpecs[785] = SettlPartySubID;
            fieldSpecs[786] = SettlPartySubIDType;
            fieldSpecs[787] = DlvyInstType;
            fieldSpecs[788] = TerminationType;
            fieldSpecs[789] = NextExpectedMsgSeqNum;
            fieldSpecs[790] = OrdStatusReqID;
            fieldSpecs[791] = SettlInstReqID;
            fieldSpecs[792] = SettlInstReqRejCode;
            fieldSpecs[793] = SecondaryAllocID;
            fieldSpecs[794] = AllocReportType;
            fieldSpecs[795] = AllocReportRefID;
            fieldSpecs[796] = AllocCancReplaceReason;
            fieldSpecs[797] = CopyMsgIndicator;
            fieldSpecs[798] = AllocAccountType;
            fieldSpecs[799] = OrderAvgPx;
            fieldSpecs[800] = OrderBookingQty;
            fieldSpecs[801] = NoSettlPartySubIDs;
            fieldSpecs[802] = NoPartySubIDs;
            fieldSpecs[803] = PartySubIDType;
            fieldSpecs[804] = NoNestedPartySubIDs;
            fieldSpecs[805] = NestedPartySubIDType;
            fieldSpecs[806] = NoNested2PartySubIDs;
            fieldSpecs[807] = Nested2PartySubIDType;
            fieldSpecs[808] = AllocIntermedReqType;
            fieldSpecs[810] = UnderlyingPx;
            fieldSpecs[811] = PriceDelta;
            fieldSpecs[812] = ApplQueueMax;
            fieldSpecs[813] = ApplQueueDepth;
            fieldSpecs[814] = ApplQueueResolution;
            fieldSpecs[815] = ApplQueueAction;
            fieldSpecs[816] = NoAltMDSource;
            fieldSpecs[817] = AltMDSourceID;
            fieldSpecs[818] = SecondaryTradeReportID;
            fieldSpecs[819] = AvgPxIndicator;
            fieldSpecs[820] = TradeLinkID;
            fieldSpecs[821] = OrderInputDevice;
            fieldSpecs[822] = UnderlyingTradingSessionID;
            fieldSpecs[823] = UnderlyingTradingSessionSubID;
            fieldSpecs[824] = TradeLegRefID;
            fieldSpecs[825] = ExchangeRule;
            fieldSpecs[826] = TradeAllocIndicator;
            fieldSpecs[827] = ExpirationCycle;
            fieldSpecs[828] = TrdType;
            fieldSpecs[829] = TrdSubType;
            fieldSpecs[830] = TransferReason;
            fieldSpecs[832] = TotNumAssignmentReports;
            fieldSpecs[833] = AsgnRptID;
            fieldSpecs[834] = ThresholdAmount;
            fieldSpecs[835] = PegMoveType;
            fieldSpecs[836] = PegOffsetType;
            fieldSpecs[837] = PegLimitType;
            fieldSpecs[838] = PegRoundDirection;
            fieldSpecs[839] = PeggedPrice;
            fieldSpecs[840] = PegScope;
            fieldSpecs[841] = DiscretionMoveType;
            fieldSpecs[842] = DiscretionOffsetType;
            fieldSpecs[843] = DiscretionLimitType;
            fieldSpecs[844] = DiscretionRoundDirection;
            fieldSpecs[845] = DiscretionPrice;
            fieldSpecs[846] = DiscretionScope;
            fieldSpecs[847] = TargetStrategy;
            fieldSpecs[848] = TargetStrategyParameters;
            fieldSpecs[849] = ParticipationRate;
            fieldSpecs[850] = TargetStrategyPerformance;
            fieldSpecs[851] = LastLiquidityInd;
            fieldSpecs[852] = PublishTrdIndicator;
            fieldSpecs[853] = ShortSaleReason;
            fieldSpecs[854] = QtyType;
            fieldSpecs[855] = SecondaryTrdType;
            fieldSpecs[856] = TradeReportType;
            fieldSpecs[857] = AllocNoOrdersType;
            fieldSpecs[858] = SharedCommission;
            fieldSpecs[859] = ConfirmReqID;
            fieldSpecs[860] = AvgParPx;
            fieldSpecs[861] = ReportedPx;
            fieldSpecs[862] = NoCapacities;
            fieldSpecs[863] = OrderCapacityQty;
            fieldSpecs[864] = NoEvents;
            fieldSpecs[865] = EventType;
            fieldSpecs[866] = EventDate;
            fieldSpecs[867] = EventPx;
            fieldSpecs[868] = EventText;
            fieldSpecs[869] = PctAtRisk;
            fieldSpecs[870] = NoInstrAttrib;
            fieldSpecs[871] = InstrAttribType;
            fieldSpecs[872] = InstrAttribValue;
            fieldSpecs[873] = DatedDate;
            fieldSpecs[874] = InterestAccrualDate;
            fieldSpecs[875] = CPProgram;
            fieldSpecs[876] = CPRegType;
            fieldSpecs[877] = UnderlyingCPProgram;
            fieldSpecs[878] = UnderlyingCPRegType;
            fieldSpecs[879] = UnderlyingQty;
            fieldSpecs[880] = TrdMatchID;
            fieldSpecs[881] = SecondaryTradeReportRefID;
            fieldSpecs[882] = UnderlyingDirtyPrice;
            fieldSpecs[883] = UnderlyingEndPrice;
            fieldSpecs[884] = UnderlyingStartValue;
            fieldSpecs[885] = UnderlyingCurrentValue;
            fieldSpecs[886] = UnderlyingEndValue;
            fieldSpecs[887] = NoUnderlyingStips;
            fieldSpecs[888] = UnderlyingStipType;
            fieldSpecs[889] = UnderlyingStipValue;
            fieldSpecs[890] = MaturityNetMoney;
            fieldSpecs[891] = MiscFeeBasis;
            fieldSpecs[892] = TotNoAllocs;
            fieldSpecs[893] = LastFragment;
            fieldSpecs[894] = CollReqID;
            fieldSpecs[895] = CollAsgnReason;
            fieldSpecs[896] = CollInquiryQualifier;
            fieldSpecs[897] = NoTrades;
            fieldSpecs[898] = MarginRatio;
            fieldSpecs[899] = MarginExcess;
            fieldSpecs[900] = TotalNetValue;
            fieldSpecs[901] = CashOutstanding;
            fieldSpecs[902] = CollAsgnID;
            fieldSpecs[903] = CollAsgnTransType;
            fieldSpecs[904] = CollRespID;
            fieldSpecs[905] = CollAsgnRespType;
            fieldSpecs[906] = CollAsgnRejectReason;
            fieldSpecs[907] = CollAsgnRefID;
            fieldSpecs[908] = CollRptID;
            fieldSpecs[909] = CollInquiryID;
            fieldSpecs[910] = CollStatus;
            fieldSpecs[911] = TotNumReports;
            fieldSpecs[912] = LastRptRequested;
            fieldSpecs[913] = AgreementDesc;
            fieldSpecs[914] = AgreementID;
            fieldSpecs[915] = AgreementDate;
            fieldSpecs[916] = StartDate;
            fieldSpecs[917] = EndDate;
            fieldSpecs[918] = AgreementCurrency;
            fieldSpecs[919] = DeliveryType;
            fieldSpecs[920] = EndAccruedInterestAmt;
            fieldSpecs[921] = StartCash;
            fieldSpecs[922] = EndCash;
            fieldSpecs[923] = UserRequestID;
            fieldSpecs[924] = UserRequestType;
            fieldSpecs[925] = NewPassword;
            fieldSpecs[926] = UserStatus;
            fieldSpecs[927] = UserStatusText;
            fieldSpecs[928] = StatusValue;
            fieldSpecs[929] = StatusText;
            fieldSpecs[930] = RefCompID;
            fieldSpecs[931] = RefSubID;
            fieldSpecs[932] = NetworkResponseID;
            fieldSpecs[933] = NetworkRequestID;
            fieldSpecs[934] = LastNetworkResponseID;
            fieldSpecs[935] = NetworkRequestType;
            fieldSpecs[936] = NoCompIDs;
            fieldSpecs[937] = NetworkStatusResponseType;
            fieldSpecs[938] = NoCollInquiryQualifier;
            fieldSpecs[939] = TrdRptStatus;
            fieldSpecs[940] = AffirmStatus;
            fieldSpecs[941] = UnderlyingStrikeCurrency;
            fieldSpecs[942] = LegStrikeCurrency;
            fieldSpecs[943] = TimeBracket;
            fieldSpecs[944] = CollAction;
            fieldSpecs[945] = CollInquiryStatus;
            fieldSpecs[946] = CollInquiryResult;
            fieldSpecs[947] = StrikeCurrency;
            fieldSpecs[948] = NoNested3PartyIDs;
            fieldSpecs[949] = Nested3PartyID;
            fieldSpecs[950] = Nested3PartyIDSource;
            fieldSpecs[951] = Nested3PartyRole;
            fieldSpecs[952] = NoNested3PartySubIDs;
            fieldSpecs[953] = Nested3PartySubID;
            fieldSpecs[954] = Nested3PartySubIDType;
            fieldSpecs[955] = LegContractSettlMonth;
            fieldSpecs[956] = LegInterestAccrualDate;
            fieldSpecs[957] = NoStrategyParameters;
            fieldSpecs[958] = StrategyParameterName;
            fieldSpecs[959] = StrategyParameterType;
            fieldSpecs[960] = StrategyParameterValue;
            fieldSpecs[961] = HostCrossID;
            fieldSpecs[962] = SideTimeInForce;
            fieldSpecs[963] = MDReportID;
            fieldSpecs[964] = SecurityReportID;
            fieldSpecs[965] = SecurityStatus;
            fieldSpecs[966] = SettleOnOpenFlag;
            fieldSpecs[967] = StrikeMultiplier;
            fieldSpecs[968] = StrikeValue;
            fieldSpecs[969] = MinPriceIncrement;
            fieldSpecs[970] = PositionLimit;
            fieldSpecs[971] = NTPositionLimit;
            fieldSpecs[972] = UnderlyingAllocationPercent;
            fieldSpecs[973] = UnderlyingCashAmount;
            fieldSpecs[974] = UnderlyingCashType;
            fieldSpecs[975] = UnderlyingSettlementType;
            fieldSpecs[976] = QuantityDate;
            fieldSpecs[977] = ContIntRptID;
            fieldSpecs[978] = LateIndicator;
            fieldSpecs[979] = InputSource;
            fieldSpecs[980] = SecurityUpdateAction;
            fieldSpecs[981] = NoExpiration;
            fieldSpecs[982] = ExpirationQtyType;
            fieldSpecs[983] = ExpQty;
            fieldSpecs[984] = NoUnderlyingAmounts;
            fieldSpecs[985] = UnderlyingPayAmount;
            fieldSpecs[986] = UnderlyingCollectAmount;
            fieldSpecs[987] = UnderlyingSettlementDate;
            fieldSpecs[988] = UnderlyingSettlementStatus;
            fieldSpecs[989] = SecondaryIndividualAllocID;
            fieldSpecs[990] = LegReportID;
            fieldSpecs[991] = RndPx;
            fieldSpecs[992] = IndividualAllocType;
            fieldSpecs[993] = AllocCustomerCapacity;
            fieldSpecs[994] = TierCode;
            fieldSpecs[996] = UnitOfMeasure;
            fieldSpecs[997] = TimeUnit;
            fieldSpecs[998] = UnderlyingUnitOfMeasure;
            fieldSpecs[999] = LegUnitOfMeasure;
            fieldSpecs[1000] = UnderlyingTimeUnit;
            fieldSpecs[1001] = LegTimeUnit;
            fieldSpecs[1002] = AllocMethod;
            fieldSpecs[1003] = TradeID;
            fieldSpecs[1005] = SideTradeReportID;
            fieldSpecs[1006] = SideFillStationCd;
            fieldSpecs[1007] = SideReasonCd;
            fieldSpecs[1008] = SideTrdSubTyp;
            fieldSpecs[1009] = SideLastQty;
            fieldSpecs[1011] = MessageEventSource;
            fieldSpecs[1012] = SideTrdRegTimestamp;
            fieldSpecs[1013] = SideTrdRegTimestampType;
            fieldSpecs[1014] = SideTrdRegTimestampSrc;
            fieldSpecs[1015] = AsOfIndicator;
            fieldSpecs[1016] = NoSideTrdRegTS;
            fieldSpecs[1017] = LegOptionRatio;
            fieldSpecs[1018] = NoInstrumentParties;
            fieldSpecs[1019] = InstrumentPartyID;
            fieldSpecs[1020] = TradeVolume;
            fieldSpecs[1021] = MDBookType;
            fieldSpecs[1022] = MDFeedType;
            fieldSpecs[1023] = MDPriceLevel;
            fieldSpecs[1024] = MDOriginType;
            fieldSpecs[1025] = FirstPx;
            fieldSpecs[1026] = MDEntrySpotRate;
            fieldSpecs[1027] = MDEntryForwardPoints;
            fieldSpecs[1028] = ManualOrderIndicator;
            fieldSpecs[1029] = CustDirectedOrder;
            fieldSpecs[1030] = ReceivedDeptID;
            fieldSpecs[1031] = CustOrderHandlingInst;
            fieldSpecs[1032] = OrderHandlingInstSource;
            fieldSpecs[1033] = DeskType;
            fieldSpecs[1034] = DeskTypeSource;
            fieldSpecs[1035] = DeskOrderHandlingInst;
            fieldSpecs[1036] = ExecAckStatus;
            fieldSpecs[1037] = UnderlyingDeliveryAmount;
            fieldSpecs[1038] = UnderlyingCapValue;
            fieldSpecs[1039] = UnderlyingSettlMethod;
            fieldSpecs[1040] = SecondaryTradeID;
            fieldSpecs[1041] = FirmTradeID;
            fieldSpecs[1042] = SecondaryFirmTradeID;
            fieldSpecs[1043] = CollApplType;
            fieldSpecs[1044] = UnderlyingAdjustedQuantity;
            fieldSpecs[1045] = UnderlyingFXRate;
            fieldSpecs[1046] = UnderlyingFXRateCalc;
            fieldSpecs[1047] = AllocPositionEffect;
            fieldSpecs[1048] = DealingCapacity;
            fieldSpecs[1049] = InstrmtAssignmentMethod;
            fieldSpecs[1050] = InstrumentPartyIDSource;
            fieldSpecs[1051] = InstrumentPartyRole;
            fieldSpecs[1052] = NoInstrumentPartySubIDs;
            fieldSpecs[1053] = InstrumentPartySubID;
            fieldSpecs[1054] = InstrumentPartySubIDType;
            fieldSpecs[1055] = PositionCurrency;
            fieldSpecs[1056] = CalculatedCcyLastQty;
            fieldSpecs[1057] = AggressorIndicator;
            fieldSpecs[1058] = NoUndlyInstrumentParties;
            fieldSpecs[1059] = UnderlyingInstrumentPartyID;
            fieldSpecs[1060] = UnderlyingInstrumentPartyIDSource;
            fieldSpecs[1061] = UnderlyingInstrumentPartyRole;
            fieldSpecs[1062] = NoUndlyInstrumentPartySubIDs;
            fieldSpecs[1063] = UnderlyingInstrumentPartySubID;
            fieldSpecs[1064] = UnderlyingInstrumentPartySubIDType;
            fieldSpecs[1065] = BidSwapPoints;
            fieldSpecs[1066] = OfferSwapPoints;
            fieldSpecs[1067] = LegBidForwardPoints;
            fieldSpecs[1068] = LegOfferForwardPoints;
            fieldSpecs[1069] = SwapPoints;
            fieldSpecs[1070] = MDQuoteType;
            fieldSpecs[1071] = LastSwapPoints;
            fieldSpecs[1072] = SideGrossTradeAmt;
            fieldSpecs[1073] = LegLastForwardPoints;
            fieldSpecs[1074] = LegCalculatedCcyLastQty;
            fieldSpecs[1075] = LegGrossTradeAmt;
            fieldSpecs[1079] = MaturityTime;
            fieldSpecs[1080] = RefOrderID;
            fieldSpecs[1081] = RefOrderIDSource;
            fieldSpecs[1082] = SecondaryDisplayQty;
            fieldSpecs[1083] = DisplayWhen;
            fieldSpecs[1084] = DisplayMethod;
            fieldSpecs[1085] = DisplayLowQty;
            fieldSpecs[1086] = DisplayHighQty;
            fieldSpecs[1087] = DisplayMinIncr;
            fieldSpecs[1088] = RefreshQty;
            fieldSpecs[1089] = MatchIncrement;
            fieldSpecs[1090] = MaxPriceLevels;
            fieldSpecs[1091] = PreTradeAnonymity;
            fieldSpecs[1092] = PriceProtectionScope;
            fieldSpecs[1093] = LotType;
            fieldSpecs[1094] = PegPriceType;
            fieldSpecs[1095] = PeggedRefPrice;
            fieldSpecs[1096] = PegSecurityIDSource;
            fieldSpecs[1097] = PegSecurityID;
            fieldSpecs[1098] = PegSymbol;
            fieldSpecs[1099] = PegSecurityDesc;
            fieldSpecs[1115] = OrderCategory;
            fieldSpecs[1116] = NoRootPartyIDs;
            fieldSpecs[1117] = RootPartyID;
            fieldSpecs[1118] = RootPartyIDSource;
            fieldSpecs[1119] = RootPartyRole;
            fieldSpecs[1120] = NoRootPartySubIDs;
            fieldSpecs[1121] = RootPartySubID;
            fieldSpecs[1122] = RootPartySubIDType;
            fieldSpecs[1123] = TradeHandlingInstr;
            fieldSpecs[1124] = OrigTradeHandlingInstr;
            fieldSpecs[1125] = OrigTradeDate;
            fieldSpecs[1126] = OrigTradeID;
            fieldSpecs[1127] = OrigSecondaryTradeID;
            fieldSpecs[1128] = ApplVerID;
            fieldSpecs[1129] = CstmApplVerID;
            fieldSpecs[1130] = RefApplVerID;
            fieldSpecs[1131] = RefCstmApplVerID;
            fieldSpecs[1132] = TZTransactTime;
            fieldSpecs[1133] = ExDestinationIDSource;
            fieldSpecs[1134] = ReportedPxDiff;
            fieldSpecs[1135] = RptSys;
            fieldSpecs[1136] = AllocClearingFeeIndicator;
            fieldSpecs[1137] = DefaultApplVerID;
            fieldSpecs[1138] = DisplayQty;
            fieldSpecs[1139] = ExchangeSpecialInstructions;
            fieldSpecs[809] = NoUsernames;
        }

        public static FieldSpec GetFieldSpec(int tag)
        {
            return fieldSpecs[tag];
        }
    }
}
